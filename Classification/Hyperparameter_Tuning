{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN91JJ+irW/b1/U/qOp01cY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":24181,"status":"ok","timestamp":1712744588035,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"},"user_tz":-480},"id":"i-ge5GRzbeE3","outputId":"919b331c-e1f8-48a8-ebff-0308157907bf"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":93484,"status":"ok","timestamp":1712744681517,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"},"user_tz":-480},"id":"NLybZPvLcAuP","outputId":"347b08e8-1b54-42d1-b3cb-92bd8575ff2e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: transformers[torch] in /usr/local/lib/python3.10/dist-packages (4.38.2)\n","Collecting transformers[torch]\n","  Downloading transformers-4.39.3-py3-none-any.whl (8.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.8/8.8 MB\u001b[0m \u001b[31m43.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting datasets\n","  Downloading datasets-2.18.0-py3-none-any.whl (510 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m510.5/510.5 kB\u001b[0m \u001b[31m29.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting accelerate\n","  Downloading accelerate-0.29.2-py3-none-any.whl (297 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m297.4/297.4 kB\u001b[0m \u001b[31m30.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (3.13.3)\n","Requirement already satisfied: huggingface-hub<1.0,>=0.19.3 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (0.20.3)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (1.25.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (24.0)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (6.0.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (2023.12.25)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (2.31.0)\n","Requirement already satisfied: tokenizers<0.19,>=0.14 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (0.15.2)\n","Requirement already satisfied: safetensors>=0.4.1 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (0.4.2)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (4.66.2)\n","Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (from transformers[torch]) (2.2.1+cu121)\n","Requirement already satisfied: pyarrow>=12.0.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (14.0.2)\n","Requirement already satisfied: pyarrow-hotfix in /usr/local/lib/python3.10/dist-packages (from datasets) (0.6)\n","Collecting dill<0.3.9,>=0.3.0 (from datasets)\n","  Downloading dill-0.3.8-py3-none-any.whl (116 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m116.3/116.3 kB\u001b[0m \u001b[31m16.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from datasets) (2.0.3)\n","Collecting xxhash (from datasets)\n","  Downloading xxhash-3.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (194 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.1/194.1 kB\u001b[0m \u001b[31m22.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting multiprocess (from datasets)\n","  Downloading multiprocess-0.70.16-py310-none-any.whl (134 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m134.8/134.8 kB\u001b[0m \u001b[31m17.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: fsspec[http]<=2024.2.0,>=2023.1.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (2023.6.0)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from datasets) (3.9.3)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from accelerate) (5.9.5)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.3.1)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (23.2.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.4.1)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (6.0.5)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.9.4)\n","Requirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (4.0.3)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub<1.0,>=0.19.3->transformers[torch]) (4.10.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->transformers[torch]) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers[torch]) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->transformers[torch]) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers[torch]) (2024.2.2)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (1.12)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (3.2.1)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (3.1.3)\n","Collecting nvidia-cuda-nvrtc-cu12==12.1.105 (from torch->transformers[torch])\n","  Using cached nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (23.7 MB)\n","Collecting nvidia-cuda-runtime-cu12==12.1.105 (from torch->transformers[torch])\n","  Using cached nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (823 kB)\n","Collecting nvidia-cuda-cupti-cu12==12.1.105 (from torch->transformers[torch])\n","  Using cached nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (14.1 MB)\n","Collecting nvidia-cudnn-cu12==8.9.2.26 (from torch->transformers[torch])\n","  Using cached nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl (731.7 MB)\n","Collecting nvidia-cublas-cu12==12.1.3.1 (from torch->transformers[torch])\n","  Using cached nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl (410.6 MB)\n","Collecting nvidia-cufft-cu12==11.0.2.54 (from torch->transformers[torch])\n","  Using cached nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl (121.6 MB)\n","Collecting nvidia-curand-cu12==10.3.2.106 (from torch->transformers[torch])\n","  Using cached nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl (56.5 MB)\n","Collecting nvidia-cusolver-cu12==11.4.5.107 (from torch->transformers[torch])\n","  Using cached nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl (124.2 MB)\n","Collecting nvidia-cusparse-cu12==12.1.0.106 (from torch->transformers[torch])\n","  Using cached nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl (196.0 MB)\n","Collecting nvidia-nccl-cu12==2.19.3 (from torch->transformers[torch])\n","  Using cached nvidia_nccl_cu12-2.19.3-py3-none-manylinux1_x86_64.whl (166.0 MB)\n","Collecting nvidia-nvtx-cu12==12.1.105 (from torch->transformers[torch])\n","  Using cached nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (99 kB)\n","Requirement already satisfied: triton==2.2.0 in /usr/local/lib/python3.10/dist-packages (from torch->transformers[torch]) (2.2.0)\n","Collecting nvidia-nvjitlink-cu12 (from nvidia-cusolver-cu12==11.4.5.107->torch->transformers[torch])\n","  Using cached nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2023.4)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2024.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas->datasets) (1.16.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch->transformers[torch]) (2.1.5)\n","Requirement already satisfied: mpmath>=0.19 in /usr/local/lib/python3.10/dist-packages (from sympy->torch->transformers[torch]) (1.3.0)\n","Installing collected packages: xxhash, nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, dill, nvidia-cusparse-cu12, nvidia-cudnn-cu12, multiprocess, nvidia-cusolver-cu12, transformers, datasets, accelerate\n","  Attempting uninstall: transformers\n","    Found existing installation: transformers 4.38.2\n","    Uninstalling transformers-4.38.2:\n","      Successfully uninstalled transformers-4.38.2\n","Successfully installed accelerate-0.29.2 datasets-2.18.0 dill-0.3.8 multiprocess-0.70.16 nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-8.9.2.26 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.19.3 nvidia-nvjitlink-cu12-12.4.127 nvidia-nvtx-cu12-12.1.105 transformers-4.39.3 xxhash-3.4.1\n"]}],"source":["!pip install transformers[torch] datasets accelerate -U"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"H8gIUWTYGrM6"},"outputs":[],"source":["import pandas as pd\n","from transformers import (\n","    AutoModelForSequenceClassification,\n","    AutoTokenizer,\n","    Trainer,\n","    TrainingArguments,\n","    EarlyStoppingCallback\n",")\n","import torch\n","import matplotlib.pyplot as plt\n","import numpy as np\n","from datasets import Dataset\n"]},{"cell_type":"markdown","source":["# **HYPERPARAMETER TUNING** via cross-fold validation"],"metadata":{"id":"B6_PUA2Y4eEd"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256,"referenced_widgets":["4527c3c6ffd64cc093bf96e6f5cf00e4","a8485773b568449faf40baf656f0c220","f620b79d0a5b4e0ba3ef3f90ccf8f3f3","9ca3841e1011450888cf9cbe3ea6002b","12803a824bbc428fa10ad14db997e3ef","455e91968fde460eae037c910000bbad","9b36ccdfbbfa46b4b430e66856932fdc","8fab7c87e98b423fb584fcbbe870c2fb","9b0d6c59a08044de97db588866016bca","c4862973848d48218c06f85ca0080e32","b92fcb82bb5749479091ca46735fead3","6039f6edeca34add9eb131164519b241","c8791f050b9546119cf8d9c348030d53","21503a7176fe45ae8f02aa3be123be72","28352332865848f993c2a3b13b5f4fa3","3aaba817ba624dd6b11d5a95bc1d6628","12bdf673acdb488a8a5ec2788efc9c16","225072d20f964b4c9dce68a7bc52e9d7","abb41d761c774ba0939b53b62376300e","beabee6d9f884567b99dc9492a989668","df2f21012da54f3e8fbe17647e7ca9f0","531e36a8190f48938f7d4271f31e8533","b5b7a55db05843c9b5a642381a85248d","252049f6248545a3948521b92e355c9e","216fd9ef89e042d0bf47bfc4c95789dd","a2229ae79b9c44a4a09900706bd5c4ce","36966256cdb849e6a035b327055bf30b","f6819fbdb8174218ba374111475511f3","650a6437af1f49dfa33321c11e2316d8","225d8f4cd7ad481b8e76205bc264dde2","bad1696be4d7450fa2a0f0821ea5ed2b","94c8f5f49daf4d1b97aaa19e164c73f3","60b2f61dc96748b4b5c68545bcea70ac","ffd7e821a8514a1d9e1e5240fbf923c9","48101cc1ba6046b5ab05774c3615b06e","009eed8f8fff4eafbc430320b31d95b0","f6602519bd6f430185b14fbf826da144","212ccce193a941adb6c995c0a4b663cb","bc3a1494f4c349cb8adf55640b3f4fc8","69826f3c6d1641c59c622b605120ee9c","bc0c0554c62d476e8e8f36a2c4148c34","e0e31e8c314942cdb013f570d387861f","c6444afff8804ed3ba5444bbb5cca621","92d8b35f04e64112925c2ffc9ee4e9f4"]},"executionInfo":{"elapsed":5792,"status":"ok","timestamp":1712744702024,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"},"user_tz":-480},"id":"47LZQoyt0-6I","outputId":"119ac747-3079-4c36-8e60-40850346f734"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:88: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["tokenizer_config.json:   0%|          | 0.00/28.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4527c3c6ffd64cc093bf96e6f5cf00e4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["config.json:   0%|          | 0.00/483 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6039f6edeca34add9eb131164519b241"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b5b7a55db05843c9b5a642381a85248d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ffd7e821a8514a1d9e1e5240fbf923c9"}},"metadata":{}}],"source":["model_name = \"distilbert/distilbert-base-uncased\"\n","tokenizer = AutoTokenizer.from_pretrained(model_name)\n"]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n","\n","def compute_metrics(pred):\n","    labels = pred.label_ids\n","    preds = pred.predictions.argmax(-1)\n","    f1 = f1_score(labels, preds, average=\"weighted\")\n","    acc = accuracy_score(labels, preds)\n","    precision = precision_score(labels, preds, average='weighted')\n","    recall = recall_score(labels, preds, average='weighted')\n","    return {\"accuracy\": acc, \"f1\": f1, \"precision\": precision, \"recall\": recall}\n","\n","def tokenize(batch):\n","    return tokenizer(batch[\"lyrics\"], padding=True, truncation=True, max_length=512)"],"metadata":{"id":"fPXwUf7T10if"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from datasets import load_dataset\n","\n","val_ds = load_dataset(\"csv\", data_files='/content/drive/MyDrive/CZ4034/final_labeled_lyrics_genre.csv', split=[f\"train[{k}%:{k+20}%]\" for k in range(0, 100, 20)])\n","train_ds = load_dataset(\"csv\", data_files='/content/drive/MyDrive/CZ4034/final_labeled_lyrics_genre.csv', split=[f\"train[:{k}%]+train[{k+20}%:]\" for k in range(0, 100, 20)])\n","# val_ds, train_ds"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["c932e26e6f1a4aec84150ef3e6fd2905","fc65feddd0cb4077b113f52c4f7ecb97","0cf564cf768942c8a8960ce63c7cb0d3","6e5e13762e5f4853a721e3fd2cc873ec","bb83dd9f4c814e83a67142dfee325612","ed09e26f0e1246208cbe6247efcd909a","9fe9f772b78642d493fdaa5bfa4651c0","d98d4fe95ef2406eac9d8c3c79cbd4c5","e3d97459828149aa863cbb539844a052","304f09360bba4288a690b6fa6e03f799","0420c6751c104a96937d4b687f42b108"]},"id":"AgvVdPOH6NT6","executionInfo":{"status":"ok","timestamp":1712744709149,"user_tz":-480,"elapsed":7127,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"af7d03d4-5b0e-45fc-ccc8-ce17ea184260"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["Generating train split: 0 examples [00:00, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c932e26e6f1a4aec84150ef3e6fd2905"}},"metadata":{}}]},{"cell_type":"code","source":["learning_rates = [0.0001, 0.001, 0.01]\n","batch_sizes = [8, 16, 32]\n","weight_decays = [0.0001, 0.001, 0.01]\n"],"metadata":{"id":"NUZn7ugNCuzT"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **OPTIMAL LEARNING RATE = 0.0001**"],"metadata":{"id":"0mrdArX8igjX"}},{"cell_type":"code","source":["# TEST LEARNING RATES\n","def find_optimal_hyperparameter(train_dataset, eval_dataset, parameters, mode):\n","\n","    # train_dataset and eval_dataset already in folds\n","    cross_validation_accuracies = {}\n","    cross_validation_times = {}\n","\n","    for p in parameters:\n","      print(f\"{p} {mode}:\")\n","      cross_validation_accuracies[p] = {}\n","      cross_validation_accuracies[p]['eval_loss'] = []\n","      cross_validation_accuracies[p]['train_loss'] = []\n","      cross_validation_accuracies[p]['eval_f1'] = []\n","      cross_validation_accuracies[p]['eval_acc'] = []\n","      cross_validation_accuracies[p]['eval_precision'] = []\n","      cross_validation_accuracies[p]['eval_recall'] = []\n","      times = []\n","\n","      for i in range(5):\n","          # each fold\n","          model = (AutoModelForSequenceClassification\n","          .from_pretrained(model_name, num_labels=num_labels, id2label=id2label, label2id=label2id)\n","          .to(device))\n","\n","          tokenized_train = train_dataset[i].map(tokenize, batched=True)\n","          tokenized_eval = eval_dataset[i].map(tokenize, batched=True)\n","          tokenized_train = tokenized_train.map(lambda x: {\"label\": label2id[x['emotion']]})\n","          tokenized_eval = tokenized_eval.map(lambda x: {\"label\": label2id[x['emotion']]})\n","          logging_steps = len(tokenized_train) // batch_size\n","          new_model = f\"distilbert-lyrics-{i+1}\"\n","\n","          training_args = TrainingArguments(output_dir=new_model,\n","                                            num_train_epochs=no_epochs,\n","                                            learning_rate=p,\n","                                            per_device_train_batch_size=batch_size,\n","                                            per_device_eval_batch_size=batch_size,\n","                                            weight_decay=0.01,\n","                                            evaluation_strategy=\"epoch\",\n","                                            save_strategy=\"epoch\",\n","                                            disable_tqdm=False,\n","                                            logging_steps=logging_steps,\n","                                            log_level=\"error\")\n","\n","          trainer = Trainer(model=model, args=training_args,\n","                            compute_metrics=compute_metrics,\n","                            train_dataset=tokenized_train,\n","                            eval_dataset=tokenized_eval,\n","                            tokenizer=tokenizer\n","                            )\n","          trainer.train();\n","          train = trainer.state.log_history[:-1:2]\n","          eval = trainer.state.log_history[1:-1:2]\n","          cross_validation_accuracies[p]['train_loss'].append([e['loss'] for e in train])\n","          cross_validation_accuracies[p]['eval_loss'].append([e['eval_loss'] for e in eval])\n","          cross_validation_accuracies[p]['eval_f1'].append([e['eval_f1'] for e in eval])\n","          cross_validation_accuracies[p]['eval_acc'].append([e['eval_accuracy'] for e in eval])\n","          cross_validation_accuracies[p]['eval_precision'].append([e['eval_precision'] for e in eval])\n","          cross_validation_accuracies[p]['eval_recall'].append([e['eval_recall'] for e in eval])\n","\n","      cross_validation_accuracies[p]['eval_loss'] = np.mean(cross_validation_accuracies[p]['eval_loss'], axis=0)\n","      cross_validation_accuracies[p]['train_loss'] = np.mean(cross_validation_accuracies[p]['train_loss'], axis=0)\n","      cross_validation_accuracies[p]['eval_f1'] = np.mean(cross_validation_accuracies[p]['eval_f1'], axis=0)\n","      cross_validation_accuracies[p]['eval_acc'] = np.mean(cross_validation_accuracies[p]['eval_acc'], axis=0)\n","      cross_validation_accuracies[p]['eval_precision'] = np.mean(cross_validation_accuracies[p]['eval_precision'], axis=0)\n","      cross_validation_accuracies[p]['eval_recall'] = np.mean(cross_validation_accuracies[p]['eval_recall'], axis=0)\n","      # print(f\"mean cross-validation loss = {cross_validation_accuracies[p]['eval_loss'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_f1 = {cross_validation_accuracies[p]['eval_f1'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_acc = {cross_validation_accuracies[p]['eval_acc'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_precision = {cross_validation_accuracies[p]['eval_precision'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_recall = {cross_validation_accuracies[p]['eval_recall'][-1]*100:.2f}%\")\n","\n","\n","    return cross_validation_accuracies\n","\n","no_epochs = 5\n","batch_size = 16\n","mode = 'learning_rate'\n","cross_validation_accuracies = find_optimal_hyperparameter(train_ds, val_ds, learning_rates, mode)\n","cross_validation_accuracies"],"metadata":{"id":"Hp9m32opiVca"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(learning_rates):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['train_loss'], color=c[idx], label=f'{p} learning_rate')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('train_loss')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712734621568,"user_tz":-480,"elapsed":1638,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"2c2fbbb1-5f8b-4b00-b27d-4f7af78a22a1","id":"Elvy8T2UisZY"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"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gq+vL9OmTUvynPHjx9OyZUsGDBhAxYoVGTlyJMHBwUycOPHfj25n3LhxDBkyhDZt2lCtWjW+/fZbTp8+7bjzt3//fpYtW8ZXX31FvXr1aNCgAf/3f//HnDlzOH36NAA5cuRg8uTJdO/e/b52Ct2zZw/PPPMM/v7+FCxYkBdeeIELFy44Xl+2bBkNGjQgICCAvHnz8thjj3H06FHH6zeHLsydO5dGjRrh7e3NrFmz6NKlC6GhoYwePZqgoCDy5s1Lr169EgXd24cZWCwWvvrqK5588kl8fX0pW7YsixcvTlTv4sWLKVu2LN7e3jz88MPMmDEDi8XC5cuX7/lZp0+fTkBAAIsXL6ZSpUp4eXkRERHB1q1badasGfny5SNXrlw0atSIHTt2JKoT4Mknn8RisTieA/z0008EBwfj7e1NqVKlGDFixB3LbqU1hVkRERGzxcRAzpwZ9rD6+xNQpAhWf3/j2skQFxfH9u3bE931tFqtNG3alI0bNyZ53saNG++4U9qiRQvHOcePH+fs2bOJ2uTKlYt69eo52mzcuJGAgABq167taNO0aVOsViubN29OVv3JcfnyZZo2bUq1atXYsmULy5Yt49y5c7Rr187R5urVq/Tr149t27axcuVKrFYrTz755B13NN9++2369OnD/v37adGiBQC//fYbR48e5bfffmPGjBlMnz490XBKZ0aMGEG7du34448/aNWqFR07duTSpUuA0XfPPPMMoaGh7Nq1i5dffpnBgwen6DPHxMTw8ccf89VXX7F3714KFCjAlStX6Ny5M+vWrWPTpk2ULVuWxx57jCtXrgDGcAiAb775hjNnzjier127lk6dOtGnTx/27dvH1KlTmT59Oh988EGKakqpTLc0l4iIiGQ+Fy5cICEhgYIFCyY6XrBgQQ4cOJDkeWfPnnV6ztmzZx2v3zx2tzYFChRI9Lq7uzt58uRxtEkLEydOpEaNGgwdOhR/f3+sVivTpk2jaNGiHDp0iHLlyvH0008nOmfatGnkz5+fffv2UaVKFcfxvn378tRTTyVqmzt3biZOnIibmxsVKlSgdevWrFy5ku7duydZU5cuXejQoQMAH374IRMmTGDLli20bNmSqVOnUr58eT799FPA2Cl1z549KQqP8fHxfP7551SvXt1x7JFHHknU5osvviAgIID169fTrl078ufPD0BAQECi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GckyfPhwatSoYXYZaUphVrK0AgXgtddg82Zjaa933zWW9oqOhhkzoGlTKFbMGHf7xx9mVysikrnNnTuXfv36MWzYMHbs2EH16tVp0aIF5+8yjmvDhg106NCBbt26sXPnTkJDQwkNDWXPnj2ONlevXqVBgwZ8/PHHGfExki0uLi5Z7Xx8fChQoEA6V3N3ya01K1KYlWyjfHl47z04etRY8aBnT8id27h7O3o0VK9ujMH99FP480+zqxURyXw+++wzunfvTteuXalUqRJTpkzB19eXadOmJXnO+PHjadmyJQMGDKBixYqMHDmS4OBgJk6c6GjzwgsvMHToUJo2bZrq2mw2G6NGjaJkyZL4+PhQvXp1FixY4Hg9ISGBbt26OV4vX74848ePT/QeXbp04cknn2T06NEUKVKE8uXLc+LECSwWCz/++CMPP/wwvr6+VK9enY0bNzrOu32Ywc27nzNnzqREiRLkypWLZ599litXrjjaXLlyhY4dO5IjRw6CgoIYO3YsjRs3pm/fvsn6vCVKlGDkyJF06tQJf39/evToAcBbb71FuXLl8PX1pVSpUrz77rvEx8c76hwxYgS7du3CYrFgsViYPn06AJcvX+all14if/78+Pv788gjj7Br166U/CcwjcKsZDsWC9SvD5Mnw9mzsHChsVatpyfs3g0DBxp3a2+OwY2KMrtiEcnq7Ha4etWcR3KXMoyLi2P79u2JAqfVaqVp06aJgt3tNm7ceEdIbdGixV3PSY1Ro0bx7bffMmXKFPbu3csbb7zB888/z++//w4YYbdIkSLMnz+fffv2MXToUN555x3mzZuX6H1WrVrFkSNHWL58OUuWLHEcHzx4MP379yc8PJxy5crRoUMHbty4kWQ9R48eZdGiRSxZsoQlS5bw+++/89FHHzle79evH+vXr2fx4sWEhYWxdu1aduzYkaLPPHr0aKpXr87OnTt59913AfDz82P69Ons27eP8ePH8+WXXzJ27FjAGA7x5ptvUrlyZc6cOcOZM2do3749AG3btuX8+fP88ssvbN++neDgYJo0acKlS5dSVJMZtJ2tZGuenhAaajz++QcWLDC20l2zBlatMh6vvgpt2hhb6TZvbmzmICKSlmJijJVYMo4VCACMYVc5ctz7jAsXLpCQkEDBggUTHS9YsCAHDhxI8ryzZ886Pefs2bMpLTpJsbGx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2bNn4+fnx9mzZzl79izXrl1ztOnUqRODBg1yPH/vvff49ddfOXbsGDt27OD555/n5MmTvPTSS2Z8BElK2bKwcSN07WqE2MGD4fHH4eJFsysTERGRLMTUMDt58mQiIyNp3LgxQUFBjsfcuXMdbSIiIjhz5ozj+T///EP37t2pWLEirVq1Iioqig0bNlCpUiUzPoLcja8vTJsGX38N3t7GUl7BwbBli9mViYiISBZh6pjZ5Mw9W716daLnY8eOZezYselUkaSLF180Quwzz8DRo9CgAYwdC927m12ZiIiIuDhT78xKNlKjhjGO9qmnID4eevfG7YUXcLtlSImIiIhISinMSsbJlQsWLIAxY8DdHeu8eTQaMAD27TO7MhEREXFRCrOSsSwW6NcPVq/GXqgQfn/+iXv9+jBrltmViYiIiAtSmBVzPPggN7Zs4e9q1bDExMDzz8Mrr8D162ZXJiIiIi5EYVbMU6AAG4YNI+Gdd4w7tlOmGJPDjh83uzIRERFxEQqzYi43N2zDhxvLduXJY0wSCw6G//3P7MpERETEBSjMSubQsiXs3An16sHly/DEEzBoENy4YXZlIiIikokpzErmUawYrFkDr79uPP/oI2jaFM6eNbcuERERybQUZiVz8fSE8eNh7lzImRN+/x1q1jR+FREREbmNwqxkTu3awbZtULmycWf2kUfg44/BZjO7MhEREclEFGYl8ypfHjZvhhdeMELs229DaCj884/ZlYmIiEgmoTArmVuOHDBjBnzxBXh5GascBAcbqx6IiIhItqcwK5mfxQLdu8OGDVCyJJw4AfXrw9SpYLebXZ2IiIiYSGFWXMfNO7JPPAFxcdCzJ3TqBFevml2ZiIiImERhVlxL7tywaBF88gm4ucF330HdunDggNmViYiIiAkUZsX1WCwwYACsWgVBQbBvH9SuDXPmmF2ZiIiIZDCFWXFdDRvCjh3w8MPGUIMOHaB3b4iNNbsyERERySAKs+LaAgPh11/hnXeM55MmGSH35Elz6xIREZEMoTArrs/dHT74AJYsMcbUbtliTBb75RezKxMREZF0pjArWUfr1sawgzp14NIlaNUKhgyBhASzKxMREZF0ojArWUuJErB2LfTqZTz/4ANo3hzOnTO1LBEREUkfCrOS9Xh5wcSJMGuWsYPYqlVQs6YRckVERCRLUZiVrOu552DrVqhYEc6cMVY9GD1au4aJiIhkIQqzkrVVrGhMCHvuOWPs7IAB8NRTcPmy2ZWJiIhIGkhVmL127RoxMTGO5ydPnmTcuHH8+uuvaVaYSJrJmdPYKWzyZPD0NHYQq1ULdu40uzIRERG5T6kKs23atOHbb78F4PLly9SrV48xY8bQpk0bJk+enKYFiqQJiwV69oT166F4cTh2DEJC4KuvNOxARETEhaUqzO7YsYOHHnoIgAULFlCwYEFOnjzJt99+y4QJE9K0QJE0Vbu2sXzXY48ZO4V17w5du8ItP2kQERER15GqMBsTE4Ofnx8Av/76K0899RRWq5UHHniAk9p5STK7PHngp59g1CiwWmHGDHjgATh0yOzKREREJIVSFWbLlCnDokWLOHXqFMuXL6d58+YAnD9/Hn9//zQtUCRdWK3w9tuwciUULAi7dxt3befPN7syERERSYFUhdmhQ4fSv39/SpQoQb169QgJCQGMu7Q1a9ZM0wJF0lXjxsZEsIYN4coVaNcO+vaFuDizKxMREZFkSFWYfeaZZ4iIiGDbtm0sW7bMcbxJkyaMHTs2zYoTyRBBQcYd2rfeMp6PHw+NGsGpU+bWJSIiIveU6nVmAwMDqVmzJlarlaioKBYtWoSfnx8VKlRIy/pEMoa7O3z0kTGWNiAANm0ydg1bvtzsykREROQuUhVm27Vrx8SJEwFjzdnatWvTrl07qlWrxg8//JCmBYpkqCeegO3bITgYLl6ERx+FYcOMDRdEREQk00lVmF2zZo1jaa6FCxdit9u5fPkyEyZM4P3330/TAkUyXKlSxnq0L79srEH73ntGqP37b7MrExERkdukKsxGRkaSJ08eAJYtW8bTTz+Nr68vrVu35vDhw2laoIgpvL1hyhT49lvw9YWwMGPYwYYNZlcmIiIit0hVmC1atCgbN27k6tWrLFu2zLE01z///IO3t3eaFihiqhdegC1boHx5+OsvY2LY2LHaNUxERCSTSFWY7du3Lx07dqRIkSIUKlSIxo0bA8bwg6pVq6ZlfSLmq1wZtm6F9u3hxg3o1w/atoXISLMrExERyfZSFWZfffVVNm7cyLRp01i3bh1Wq/E2pUqV0phZyZr8/OD77+H//g88POCHH4xNFnbtMrsyERGRbC3VS3PVrl2bJ598khw5cmD/90eurVu35sEHH0yz4kQyFYsFeveGtWuhWDE4csTYBvebb8yuTEREJNtKdZj99ttvqVq1Kj4+Pvj4+FCtWjVmzpyZlrWJZE716sGOHcYKB9evw4svQrducO2a2ZWJiIhkO6kKs5999hmvvPIKrVq1Yt68ecybN4+WLVvSs2dP7QAm2UPevLBkCbz/PlitMG0ahIQYd2tFREQkw7in5qT/+7//Y/LkyXTq1Mlx7IknnqBy5coMHz6cN954I80KFMm0rFYYPNgYatChgzF+tlYtY9jBU0+ZXZ2IiEi2kKo7s2fOnKF+/fp3HK9fvz5nzpy576JEXEqTJrBzJzRoAFFR8PTT8OabEB9vdmUiIiJZXqrCbJkyZZg3b94dx+fOnUvZsmXvuygRl1O4MKxaBf37G88/+wwefthYm1ZERETSTaqGGYwYMYL27duzZs0ax+oF69evZ+XKlU5Drki24OEBn34K9etDly7Glrg1a8Ls2dC0qdnViYiIZEmpujP79NNPs3nzZvLly8eiRYtYtGgR+fLlY8uWLTz55JNpXaOIa3nySdi+HWrUgL//hubNYeRIsNnMrkxERCTLSdWdWYBatWrx3XffpWUtIllHmTKwYQO8/jp89RUMHWrcqf3uO8iXz+zqREREsoxkh9moqKhkv6m/v3+qihHJUnx84Msv4cEH4dVXYflyCA6G+fONtWpFRETkviU7zAYEBGCxWO7axm63Y7FYSEhIuO/CRLKMLl2MEPvMM3D4MDz0EIwZY+wmdo8/UyIiInJ3yQ6zv/32W3rWIZK1VasG27YZO4UtWGAMP1i3zhiC4OdndnUiIiIuK9lhtlGjRil+81dffZX33nuPfBojKAL+/jBvHkyYYCzhNW+esdHCggVQpYrZ1YmIiLikVK1mkFzfffddisbaimR5Fgv06QNr1kCRInDwINStCzNnml2ZiIiIS0rXMGu329Pz7UVcV0iIsWtY8+Zw7Rp06gQ9esD162ZXJiIi4lLSNcyKyF3kywdLl8Lw4cYd2y+/NDZcOHbM7MpERERchsKsiJnc3GDYMFi2zAi3O3dCcDCWxYvNrkxERMQlKMyKZAbNm8OOHcbwg8hI3J95hhoTJxo7iImIiEiSFGZFMouiRWH1aujbF4DiK1bgXrkyTJoEN26YWpqIiEhmla5h9vnnn9duYCIp4ekJY8dyY/VqLpcsieXyZWNzhdq1jXVpRUREJJFkrzN7u8uXL7NlyxbOnz+PzWZL9FqnTp0AmDx58v1VJ5JN2evX5/fRo3nsr79wGzrUWI/2oYfg+efhk08gKMjsEkVERDKFVIXZ//3vf3Ts2JHo6Gj8/f0TbXNrsVgcYVZE7oObG7aePXF79lkYPNjYLey77+Cnn4wVEF57DTw8zK5SRETEVKkaZvDmm2/y4osvEh0dzeXLl/nnn38cj0uXLqV1jSLZW/788MUXsGkT1KkDV67Am29C9eqwcqXZ1YmIiJgqVWH2r7/+4vXXX8fX1zet6xGRpNStawTar74ylvHavx+aNoV27eDUKbOrExERMUWqwmyLFi3Ytm1bWtciIvditUK3bnDokDExzGqF+fOhQgUYNQpiY82uUEREJEOlasxs69atGTBgAPv27aNq1ap43DZu74knnkiT4kQkCblzw//9H7z0khFq162Dd96BadNgwgR49FGzKxQREckQqQqz3bt3B+C999674zWLxUJCQsL9VSUiyVO9OqxZA7NmwYABcOQItGoFTzwBY8dCqVJmVygiIpKuUjXMwGazJflQkBXJYBaLsWTXwYPGxDB3d1i8GCpVMlY9uHbN7ApFRETSjXYAE8kq/P1h9GhjTdpHHjHGz44YYYTaRYvAbje7QhERkTSX7GEGEyZMoEePHnh7ezNhwoS7tn399dfvuzARSaVKlWDFCvjhB+jXD06cgCefhBYtjPG05cqZXaGIiEiaSXaYHTt2LB07dsTb25uxY8cm2c5isSjMipjNYoFnnjEmgn34oXHHdvlyqFLFGIoweDDkzGl2lSIiIvct2cMMjh8/Tt68eR2/T+px7NixZF981KhR1KlTBz8/PwoUKEBoaCgHDx6853nz58+nQoUKeHt7U7VqVZYuXZrsa4pkKzlywAcfwJ49RrCNj4ePPjKW8po7V0MPRETE5Zk6Zvb333+nV69ebNq0ibCwMOLj42nevDlXr15N8pwNGzbQoUMHunXrxs6dOwkNDSU0NJQ9e/ZkYOUiLqZsWfj5Z2NiWMmS8Ndf8Oyzxtha/dkREREXlqqluQD+/PNPFi9eTEREBHFxcYle++yzz5L1HsuWLUv0fPr06RQoUIDt27fTsGFDp+eMHz+eli1bMmDAAABGjhxJWFgYEydOZMqUKan4JCLZhMUCjz9u7Br26afGJgurV0ONGvD66zBsGOTKZXaVIiIiKZKqMLty5UqeeOIJSpUqxYEDB6hSpQonTpzAbrcTHByc6mIiIyMByJMnT5JtNm7cSL9+/RIda9GiBYsWLXLaPjY2lthbdkWKiooCID4+nvj4+FTXmhI3r5NR13MV6pekpWvfuLvDoEHQoQNuAwZg/eknGDsW++zZJHz4IfaOHY2dxTIhfWecU78kTX3jnPolaeob5zK6X1JyHYvdnvJBc3Xr1uXRRx9lxIgR+Pn5sWvXLgoUKEDHjh1p2bIlr7zySkrfEpvNxhNPPMHly5dZt25dku08PT2ZMWMGHTp0cBz7/PPPGTFiBOfOnbuj/fDhwxkxYsQdx2fPno2vr2+K6xTJavLv3Em1L78k5+nTAFysUIHdPXoQqQ0XRETEJDExMTz33HNERkbi7+9/17apCrN+fn6Eh4dTunRpcufOzbp166hcuTK7du2iTZs2nDhxIsVFv/LKK/zyyy+sW7eOIkWKJNkupWHW2Z3ZokWLcuHChXt2TlqJj48nLCyMZs2a3bH1b3amfklahvdNXBzW8eOxfvghlqtXsVut2Lp3xzZiBNzlJyUZTd8Z59QvSVPfOKd+SZr6xrmM7peoqCjy5cuXrDCbqmEGOXLkcIyTDQoK4ujRo1SuXBmACxcupPj9evfuzZIlS1izZs1dgyxAYGDgHaH13LlzBAYGOm3v5eWFl5fXHcc9PDwy/EtqxjVdgfolaRnWNx4e8M470KkTDBiAZc4c3KZOxW3BAmNpr27dwM0t/etIJn1nnFO/JE1945z6JWnqG+cyql9Sco1UDYx74IEHHEMBWrVqxZtvvskHH3zAiy++yAMPPJDs97Hb7fTu3ZuFCxeyatUqSpYsec9zQkJCWLlyZaJjYWFhhISEpOxDiMidihSB77+H336DypXh4kV4+WV44AHYvNns6kRERO6QqjD72WefUa9ePQBGjBhBkyZNmDt3LiVKlODrr79O9vv06tWL7777jtmzZ+Pn58fZs2c5e/Ys127ZS75Tp04MGjTI8bxPnz4sW7aMMWPGcODAAYYPH862bdvo3bt3aj6KiDjTuDHs3Aljxxrb5G7bZgTabt3g/HmzqxMREXFIcZhNSEjgzz//pFixYoAx5GDKlCn88ccf/PDDDxQvXjzZ7zV58mQiIyNp3LgxQUFBjsfcuXMdbSIiIjhz5ozjef369Zk9ezZffPEF1atXZ8GCBSxatIgqVaqk9KOIyN14eEDfvnDwIHTubBybNg3Kl4eJE+HGDVPLExERgVSMmXVzc6N58+bs37+fgICA+7p4cuaerV69+o5jbdu2pW3btvd1bRFJpsBAmD4devSA3r2NO7avvQZffmmE2oceMrtCERHJxlI1zKBKlSop2rZWRLKA+vVh61b4/HPInRv++AMaNoTnn4d/l/USERHJaKkKs++//z79+/dnyZIlnDlzhqioqEQPEcmi3NzglVfg0CHjTq3FArNmGUMPRo8GLTIuIiIZLFVhtlWrVuzatYsnnniCIkWKkDt3bnLnzk1AQAC5c+dO6xpFJLPJlw+mToUtW6BePYiOhgEDoHp1WLHC7OpERCQbSdU6s9988w1FixbF7bZ1J202GxEREWlSmIi4gNq1YcMGY0zt22/D/v3QrBk88wyMGQP/ThQVERFJL6kKsy+++CJnzpyhQIECiY5fvHiRpk2b0vnmzGcRyfqsVnjxRXjySRg2DCZNggUL4OefYfBg6N8fnGxcIiIikhZSNczAbrdjsVjuOB4dHY23t/d9FyUiLih3bpgwwVjt4KGH4No1GDIEqlSBpUvNrk5ERLKoFN2Z7devHwAWi4V3330XX19fx2sJCQls3ryZGjVqpGmBIuJiqlWD3383dhLr3x+OHIHWreHxx41NGEqXNrtCERHJQlIUZnfu3AkYd2Z3796Np6en4zVPT0+qV69O//7907ZCEXE9Fgs895wRYN97D8aNg//9D379FQYONMbX3vKPYRERkdRKUZj97bffAOjatSvjx4/H398/XYoSkSzCzw8+/dQYU/vaa7ByJYwcCd9+a9ylDQ01gq+IiEgqpWrM7DfffKMgKyLJV7EihIUZE8OKFoWTJ+Gpp6BlS2O7XBERkVRKVZgVEUkxiwWeftpYvmvIEPD0NIYdVK0Kb70FV66YXaGIiLgghVkRyVg5chhDDfbuhVatjF3DPvkEKlSAOXPAbje7QhERcSEKsyJijjJljLVo//c/KFUKTp+GDh3g4Ydh926zqxMRERehMCsi5nrsMeMu7ciR4ONjLOtVsyb07QuXL5tdnYiIZHIKsyJiPm9vYxzt/v3GxLCEBBg/HsqXN7bKtdnMrlBERDIphVkRyTyKF4cffoDly40ge/48dO0KDRrAjh1mVyciIpmQwqyIZD7Nm8Mff8DHHxsTxjZuhNq1sfbujUdUlNnViYhIJqIwKyKZk6ensVvYwYPGxDC7HbcvvqBpr15Yv/zSGIogIiLZnsKsiGRuhQvD7NmwejX2ypXxvHIFt169oF492LTJ7OpERMRkCrMi4hoaNeLG1q3sfukl7P7+sH07hIQYW+WeP292dSIiYhKFWRFxHe7uHHvsMW7s3QtduhjHvvkGypWDCRPgxg1TyxMRkYynMCsirqdgQSPEbtgAwcEQGQl9+hi/X7PG7OpERCQDKcyKiOsKCYEtW2DKFMiTx9g5rFEj6NjR2FFMRESyPIVZEXFtbm7w8stw6JDxq8ViTBgrXx4+/RTi4syuUERE0pHCrIhkDXnzGndot26FBx6A6Ghjaa9q1SAszOzqREQknSjMikjWUqsWrF9vjKnNn99Yp7Z5c3jmGTh50uzqREQkjSnMikjWY7Uaqx0cOmRMDHNzM7bJrVgR3n8frl83u0IREUkjCrMiknUFBMC4cbBjBzRsCNeuwbvvQuXKsGSJ2dWJiEgaUJgVkayvWjVYvdqYGFaoEBw7Bo8/bjyOHjW7OhERuQ8KsyKSPVgs0KEDHDhgTAxzdzfuzlaqZNytjYkxu0IREUkFhVkRyV78/ODjj401aZs1M5buev99YzztDz+A3W52hSIikgIKsyKSPVWoAMuXGwG2WDGIiDBWPGjRwrh7KyIiLkFhVkSyL4sFnnoK9u83hhp4eRlr0latagxFuHLF7ApFROQeFGZFRHx94b33YO9eY1LYjRvG7mHlyxuTxjT0QEQk01KYFRG5qXRpWLzYmBhWujScOQMdO0LjxvDHH2ZXJyIiTijMiojcrnVr2LPHmBjm4wNr1kBwsLEBw+XLZlcnIiK3UJgVEXHG2xsGDzYmgz39NCQkwIQJUK6csVWuzWZ2hSIigsKsiMjdFSsGCxbAr78aKyD8/Te8+CLUrw/btpldnYhItqcwKyKSHM2awa5dxsSwnDlh82aoWxdefhkuXjS7OhGRbEthVkQkuTw9oX9/OHgQnnvOWOXgiy+MoQdTphhDEUREJEMpzIqIpFShQjBrFvz+u7Em7aVL8MorUKcObNxodnUiItmKwqyISGo1bAg7dhgTw3Llgp07jbG0XbrAuXNmVyciki0ozIqI3A93d3jtNTh0yJgYBjBjhjH0YPx4YwMGERFJNwqzIiJpoUAB+PprY5hBrVoQFQV9+0LNmrB6tdnViYhkWQqzIiJp6YEHjJUOpk6FPHmMzRcefhg6dIC//jK7OhGRLEdhVkQkrbm5QY8extCDV14BiwXmzIHy5eGTTyAuzuwKRUSyDIVZEZH0kjcvfP65sblCSAhcvQpvvWWsgPDrr2ZXJyKSJSjMioikt+BgWLcOpk83xtYeOgQtWsBTT8GJE2ZXJyLi0hRmRUQygtUKnTsbQbZvX2MowsKFULEijBwJ16+bXaGIiEtSmBURyUi5csHYsRAeDo0aGSF26FCoXBn+9z+zqxMRcTkKsyIiZqhSBX77zZgYVrgwHDsGTzwBjz0GR46YXZ2IiMtQmBURMYvFAu3bw4EDxsQwDw/4+WfjLu2QIcaEMRERuSuFWRERs+XMCR99BLt3Q/PmxtJdH3xgjKddsADsdrMrFBHJtBRmRUQyi/LlYdkyY2JY8eJw6hS0bQvNmsH+/WZXJyKSKSnMiohkJhYLhIbCvn3GxDAvL1i5EqpVg/79jW1yRUTEQWFWRCQz8vWFESOMUPvEE3DjBowZAxUqwKxZGnogIvIvhVkRkcysVCn46SdjYljp0nDmDDz/vLGs165dZlcnImI6hVkREVfQqhXs2WNMDPPxgbVrjZ3FXnsN/vnH7OpEREyjMCsi4iq8veGdd4ylvNq2BZsNJk7EvXJlioWFGc9FRLIZhVkREVdTrBjMmwcrVkDFilguXKDmpEm4160Ly5drPK2IZCsKsyIirqpJEwgPJ+Hjj4n39cXyxx/QsiU0bQrbt5tdnYhIhlCYFRFxZZ6e2N54g7ApU0jo0wc8PWHVKqhdGzp0MLbJFRHJwhRmRUSygHh/f2yffgoHDxqrHVgsMGeOsZRXnz7w999mlygiki4UZkVEspISJWDmTNixw9gaNz4eJkwwlvV6/324etXsCkVE0pTCrIhIVlSjhjEZLCwMataEK1fg3XehbFn44gtjEwYRkSxAYVZEJCtr2hS2bYPZs6FkSWPThZdfhipVYOFCrXwgIi5PYVZEJKuzWo3JYPv3w7hxkDevMbb2qaegQQNYv97sCkVEUk1hVkQku/DyMiaDHT0KgwcbO4lt2GAE2jZtjLArIuJiFGZFRLKbXLmMyWBHjkD37sad28WLjaEH3bvD6dNmVygikmymhtk1a9bw+OOPU6hQISwWC4sWLbpr+9WrV2OxWO54nD17NmMKFhHJSgoVMiaD7dkDoaHGdrhffQVlyhh3biMjza5QROSeTA2zV69epXr16kyaNClF5x08eJAzZ844HgUKFEinCkVEsoGKFY3JYOvWQf36cO0afPihsZzXuHEQG2t2hSIiSTI1zD766KO8//77PPnkkyk6r0CBAgQGBjoeVqtGS4iI3LcHHzQC7cKFxmYLFy/CG28Yv58927hzKyKSybhkCqxRowZBQUE0a9aM9ZqFKyKSdiwWY8jB7t3GEISgIDhxAjp2NLbIDQszu0IRkUTczS4gJYKCgpgyZQq1a9cmNjaWr776isaNG7N582aCg4OdnhMbG0vsLT8ii4qKAiA+Pp74+PgMqfvmdTLqeq5C/ZI09Y1z6hfn0q1funSBtm2xTpiAdfRoLDt3QvPm2Jo2JeGDD4zNGDI5fWecU78kTX3jXEb3S0quY7HbM8eK2RaLhYULFxIaGpqi8xo1akSxYsWYOXOm09eHDx/OiBEj7jg+e/ZsfH19U1OqiEi24xkVRbl58yi5bBnWf3cPO9WwIQc6diSmYEGTqxORrCYmJobnnnuOyMhI/P3979rW5cPsgAEDWLduHRs3bnT6urM7s0WLFuXChQv37Jy0Eh8fT1hYGM2aNcPDwyNDrukK1C9JU984p35xLkP75dgx3IYNwzp3LgB2T09sPXtie/ttyJcvfa+dCvrOOKd+SZr6xrmM7peoqCjy5cuXrDDrUsMMnAkPDycoKCjJ1728vPDy8rrjuIeHR4Z/Sc24pitQvyRNfeOc+sW5DOmX8uVhzhwYOBDeegvLihW4TZiA2/Tp8PbbxqYMmfCnXvrOOKd+SZr6xrmM6peUXMPUCWDR0dGEh4cTHh4OwPHjxwkPDyciIgKAQYMG0alTJ0f7cePG8dNPP3HkyBH27NlD3759WbVqFb169TKjfBGR7Cs42JgMtnw51KgBUVHwzjtQtqyxVu2/QxFERNKbqWF227Zt1KxZk5r/TiLo168fNWvWZOjQoQCcOXPGEWwB4uLiePPNN6latSqNGjVi165drFixgiZNmphSv4hItte8OWzfDjNnQvHixu5h3btDtWrGrmKZYySbiGRhpg4zaNy4MXcbsjt9+vREzwcOHMjAgQPTuSoREUkRqxWefx7atoXPPze2yt2/H9q0gQYN4JNPICTE7CpFJItyyXVmRUQkE/LyMjZZOHrUGD/r7f3frmJPPQUHD5pdoYhkQQqzIiKStgICYNQoOHIEunUz7twuXAiVK0PPnnDmjNkVikgWojArIiLpo3BhYzLYH3/A449DQgJMnQplysC77xqTxkRE7pPCrIiIpK/KlY3JYGvWwAMPQEyMMa62dGn4v/+DuDizKxQRF6YwKyIiGeOhh2DDBvjhByhXDi5cgNdfh4oVjbVrbTazKxQRF6QwKyIiGcdiMSaD7dkDkydDwYJw7Bh06AB168KqVWZXKCIuRmFWREQynoeHMRnsyBF47z3ImdNYr7ZJE2jZEnbtMrtCEXERCrMiImKenDmNyWBHj8Jrr4G7u7GrWM2a0KkTnDxpdoUikskpzIqIiPkKFIAJE+DAAWjf3tg5bOZMY2xt//5w8aLZFYpIJqUwKyIimUfp0sZksC1b4OGHjZUOxowxjn/8MVy7ZnaFIpLJKMyKiEjmU6cOrFwJv/wC1apBZKSxq1i5cvDNN8aatSIiKMyKiEhmZbEYk8F27IAZM6BYMfjzT3jxRaheHZYsMYYjiEi2pjArIiKZm5ubMRns4EEYPRpy54a9e41dxRo3hs2bza5QREykMCsiIq7B2xvefNNY+WDgQPDy+m9XsWeegUOHzK5QREygMCsiIq4ld25jMtjhw9C1qzEc4YcfoFIlePVVOHfO7ApFJAMpzIqIiGsqWhSmTYM//oDWrY1JYZMnGysfDB8OV66YXaGIZACFWRERcW1VqhiTwVavNrbEvXoVRoyAMmWwTp6M5cYNsysUkXSkMCsiIllDo0awaRPMnw9ly8L587j16cMjr72GZf58rXwgkkUpzIqISNZhsRiTwfbuhUmTsBcoQM4zZ3Dv2BHq1TPu3opIlqIwKyIiWY+HB7z6Kjf27+fAs89iz5EDtm41dhVr3Rp27za7QhFJIwqzIiKSdfn5cfDZZ7lx4ICx0oG7Oyxdamy60LUrRESYXaGI3CeFWRERyfoKFoRJk2DfPmjb1hg/O326sT3uwIHwzz9mVygiqaQwKyIi2UfZsjBvnrFrWKNGEBsLn35qLOc1ejRcv252hSKSQgqzIiKS/dStC7/9ZizpVaWKcWd2wADjTu2MGcaatSLiEhRmRUQke7JYjMlg4eHwzTdQpAicOgVdukDNmvDLL1rOS8QFKMyKiEj25uZmBNhDh4xtcgMCjNUOWrWCRx4xVkEQkUxLYVZERATAx8eYDHb0KPTvD15e/+0q1r49HDlidoUi4oTCrIiIyK3y5DEmhR08CJ06GcMR5s2DihXhtdfg/HmzKxSRWyjMioiIOFO8uDEZbOdOePRRuHEDJk40Vj547z2Ijja7QhFBYVZEROTuqlc3NlpYtQpq1zZC7LBhUKYMTJ4M8fFmVyiSrSnMioiIJMfDDxvr086ZA6VKwblzxq5iVarADz9o5QMRkyjMioiIJJfVakwG278f/u//IH9+YxWEZ56B+vVh7VqzKxTJdhRmRUREUsrTE3r3NlY4ePdd8PWFTZugYUN4/HHYu9fsCkWyDYVZERGR1PL3NyaDHT0KPXsaa9YuWQLVqkG3bvDnn2ZXKJLlKcyKiIjcr8BAYzLY3r3w1FNgs8G0aVC2LAwaBJcvm12hSJalMCsiIpJWypc3JoNt2AANGsD16/DRR8ZyXp99BrGxZlcokuUozIqIiKS1kBBYswYWL4ZKleDSJXjzTSPszpxp3LkVkTShMCsiIpIeLBZjMtiuXfDVV1CoEJw8aewqFhwMy5drOS+RNKAwKyIikp7c3Y3JYIcPw6hRkCuXEXBbtoRmzWD7drMrFHFpCrMiIiIZwdcX3n7bWPmgXz9jea+VK41dxZ57Do4dM7tCEZekMCsiIpKR8uaFMWPg4EF4/nljOML330OFCtCnD/z9t9kVirgUhVkREREzlChhTAbbsQOaN4f4eJgwwVj54IMP4OpVsysUcQkKsyIiImaqUcOYDBYWZkwMu3IFhgwx1qj94gu4ccPsCkUyNYVZERGRzKBpU9i6FWbPhpIl4cwZePllqFIFFi7UygciSVCYFRERySysVujQAfbvh3HjjPG1Bw8au4o1aADr15tdoUimozArIiKS2Xh5GZPBjh6FwYPBx+e/XcVCQ42wKyKAwqyIiEjmlSsXvP8+HDkCPXqAmxv89JMx9KBHDzh92uwKRUynMCsiIpLZFSoEU6fCnj3GnVmbDb78EsqUMe7cRkaaXaGIaRRmRUREXEWFCsZksHXroH59uHYNPvzQWM5r3DiIjTW7QpEMpzArIiLiah580Ai0ixYZAffiRXjjDahY0VgNwWYzu0KRDKMwKyIi4oosFmjTBnbvNtajDQqC48ehY0eoUwdWrDC7QpEMoTArIiLiytzdoXt3OHzYmCzm52fsKtasmbGz2M6dZlcokq4UZkVERLKCHDmMyWDHjhnLenl4/Ler2PPPw4kTZlcoki4UZkVERLKSfPmMyWAHDsBzzxnHZs2C8uWhXz9jfK1IFqIwKyIikhWVKmWE2O3bja1y4+Jg7FgoVQrrxx/jppUPJItQmBUREcnKgoON4QbLl0ONGhAVhdu779K0Z0+sgwYZY2rtdrOrFEk1hVkREZHsoHlz4y7td99hL1EC73/+wW3MGCPsVqgAw4YZQxNEXIzCrIiISHZhtULHjtzYvZstAwdie+op8PaGQ4fgvfeMdWpr1ICPPjKW+RJxAQqzIiIi2Y2XF2fq1ydhzhw4fx5mzoTWrY1lvnbtgkGDjDG3ISEwfjycPm12xSJJUpgVERHJzvz8jKW7liyBc+fgyy+hSRPjLu6mTdC3LxQpAg8/DFOnwoULZlcskojCrIiIiBjy5IGXXjJ2D/vrL5gwAerXNyaIrV4NPXsaO421agXffgtRUWZXLKIwKyIiIk4EBsJrr8H69caGC598AjVrwo0b8Msv0LkzFCgATz0F8+dDTIzZFUs2pTArIiIid1e8OAwYYGyTe+AAjBhhrIAQGwsLF0K7dkaw7dgR/vc/Y01bkQyiMCsiIiLJV748DB0K+/ZBeDi8/TaUKAFXr8Ls2fDEE1Cw4H/DFW7cMLtiyeIUZkVERCTlLBaoXh1GjYJjx4zJYn36GGNqL1+Gr7+GZs2gcOH/hivYbGZXLVmQwqyIiIjcH4sF6tWDcePg1Cn47Td4+WXIm9dY+mviRGjQwLiDO2CAsXmDdh2TNKIwKyIiImnHzQ0aN4YpU+DMGVi6FDp1MpYAO3UKRo+G2rUTD1cQuQ8KsyIiIpI+PDzg0UdhxgzjDu2PPxqTxXx84PBhGDkSKleGatXgww+N4QoiKaQwKyIiIunP2xuefBLmzjU2Z5g1Cx5/3Ai8u3fD4MFQurQxXGHsWGOdW5FkUJgVERGRjOXnB889B4sXG8H2q6+gaVNj17EtW6BfPyha9L/hCn//bXbFkomZGmbXrFnD448/TqFChbBYLCxatOie56xevZrg4GC8vLwoU6YM06dPT/c6RUREJJ3kzg3dukFYGJw+bUwWe/BBY4LY77/DK68YKyS0bGkMV4iMNLtiyWRMDbNXr16levXqTJo0KVntjx8/TuvWrXn44YcJDw+nb9++vPTSSyxfvjydKxUREZF0V7Ag9OoF69bByZPw6adQqxYkJMDy5dCli7E5w83hClevml2xZALuZl780Ucf5dFHH012+ylTplCyZEnGjBkDQMWKFVm3bh1jx46lRYsW6VWmiIiIZLRixaB/f+Nx+DDMmQPffw/798OiRcYjRw5jk4Znn4UWLcDLy+yqxQSmhtmU2rhxI02bNk10rEWLFvTt2zfJc2JjY4mNjXU8j4qKAiA+Pp74+Ph0qfN2N6+TUddzFeqXpKlvnFO/OKd+SZr6xjmX65cSJYydxt56C/bswTpvHtb587EcO2YE3O+/x54rF/bQUGzt2mF/+GFwT13Ecbm+ySAZ3S8puY7Fbs8cqxZbLBYWLlxIaGhokm3KlStH165dGTRokOPY0qVLad26NTExMfj4+NxxzvDhwxkxYsQdx2fPno2vr2+a1C4iIiIZzG4n4PBhCq9bR+F16/C5dMnxUmyuXJyuX58/GzTgUsWKxsQycSkxMTE899xzREZG4u/vf9e2LnVnNjUGDRpEv379HM+joqIoWrQozZs3v2fnpJX4+HjCwsJo1qwZHh4eGXJNV6B+SZr6xjn1i3Pql6Spb5zLUv3Sty/YbNxYvx7L3LlYf/wRrwsXKPnLL5T85RfsRYpga9sWe7t22IODjd3K7iJL9U0ayuh+ufmT9ORwqTAbGBjIuXPnEh07d+4c/v7+Tu/KAnh5eeHlZAyNh4dHhn9JzbimK1C/JE1945z6xTn1S9LUN85lqX555BHjMXEirFpljLH98Ucsf/6J29ixxtq1pUsb42s7dDA2a7iLLNU3aSij+iUl13Cp++4hISGsXLky0bGwsDBCQkJMqkhEREQyFQ8PYzLYN98Ya9guXAjt2xu7jh09Ch98AFWqQNWqxu+PHDG7YrlPpobZ6OhowsPDCQ8PB4ylt8LDw4mIiACMIQKdOnVytO/ZsyfHjh1j4MCBHDhwgM8//5x58+bxxhtvmFG+iIiIZGbe3hAaatylPX/emCz2xBNG4N2zB4YMgbJloU4d+Owz+PNPsyuWVDA1zG7bto2aNWtSs2ZNAPr160fNmjUZOnQoAGfOnHEEW4CSJUvy888/ExYWRvXq1RkzZgxfffWVluUSERGRu8uZ0xhi8NNPxh3badOgeXNwc4Nt2+DNN6FoUdweeYQSS5ca4VdcgqljZhs3bszdFlNwtrtX48aN2blzZzpWJSIiIlla7tzQtavxOH8eFiww7t6uXYt13Tqqr1uH/euvoUkTIwA/+SQEBJhdtSTBpcbMioiIiKSpAgXg1VdhzRqIiCDhk0/4p0wZLAkJ8Ouv8OKLxs5kbdoYgVe7jmU6CrMiIiIiAEWLYuvblzWjRxO/bx+8/74xWSwuDhYvNlZBKFDAuFu7aBFcv252xYLCrIiIiMidypSBwYNh927jMXiwsbRXTAzMnWsMPShY0BiqsHw5aMcw0yjMioiIiNxNlSrGXdrDh2HrVmOyWOHCEBUF06dDy5ZQqNB/wxVsNrMrzlYUZkVERESSw2KB2rVh9GiIiDCC66uvQv78cOECTJ4MjRpBsWLQrx9s2QJ3meguaUNhVkRERCSlrFZ46CGYNAlOnzaGGnTtCrlywV9/GTuO1auXeLiCgm26UJgVERERuR/u7saatdOmGWvY/vSTMVnM1xeOHYMPP4Rq1YzhCiNHGsMVJM0ozIqIiIikFS8vY5ex2bONNWznzDF2IfP0hH37YOhQKFcu8XAFuS8KsyIiIiLpIUcOaN8eFi40gu306dCihbHr2PbtMGAAFC8ODRoYwxXOnTO7YpekMCsiIiKS3nLlgs6dYdkyOHPmv8liFgusXw+9exsrIjRrBl9/Df/8Y3bFLkNhVkRERCQj5c8PPXvC6tVw6hR89hnUrWss6bViBbz0krGG7c3hCtHRZlecqSnMioiIiJilcGF44w3YvBmOHjUmi1WtamzC8L//QceOxq5jN4craNexOyjMioiIiGQGpUrBoEHwxx+wZw+8+66xtNe1azBvHjz1lBFsO3eGX37RrmP/UpgVERERyWwqV4b33oNDh2DbNujfH4oWhStX4NtvoVUrCAr6b7hCQoLZFZtGYVZEREQks7JYoFYt+PRTOHEC1q0zJosVKAAXL8LUqfDww0bQ7dvXGK6QzTZnUJgVERERcQVWKzz4IPzf/xm7jIWFQbduEBBgrJAwfjw88MB/wxV27coWwVZhVkRERMTVuLtD06bw1VfG+rT/+x8895yxtu2JE/DRR1CjRuLhClmUwqyIiIiIK/P0hMceg1mzjM0Zbk4W8/KC/fth2DAoXx6Cg43hCidPml1xmlKYFREREckqfH2hbVv44Qfjju2MGfDoo8auYzt3wsCBUKLEf8MVzp41u+L7pjArIiIikhXlygWdOsHSpUZonTIFGjc2JpVt2ACvv26sc3tzuMKlS2ZXnCoKsyIiIiJZXb588PLL8Ntv8OefMG6cMVnMZoOVK6F7d2PXscceg+++M5YAcxEKsyIiIiLZSaFC0KcPbNwIx47BqFFQvTrcuAE//wwvvGAs/XVzuMK1a2ZXfFcKsyIiIiLZVcmS8PbbEB4O+/YZk8XKlTO2zV2wAJ55BgoWxK1rVwps25Ypdx1TmBURERERqFgRhg+HAwdgxw5jslixYnDlCtZZswh5/32s33xjdpV3UJgVERERkf9YLFCzJnz8MRw/Dhs2kNCrF9fy5sUWGmp2dXdwN7sAEREREcmkrFYICcFWuza/Nm1KqwIFzK7oDrozKyIiIiL3ZrGYXYFTCrMiIiIi4rIUZkVERETEZSnMioiIiIjLUpgVEREREZelMCsiIiIiLkthVkRERERclsKsiIiIiLgshVkRERERcVkKsyIiIiLishRmRURERMRlKcyKiIiIiMtSmBURERERl6UwKyIiIiIuS2FWRERERFyWwqyIiIiIuCyFWRERERFxWQqzIiIiIuKy3M0uIKPZ7XYAoqKiMuya8fHxxMTEEBUVhYeHR4ZdN7NTvyRNfeOc+sU59UvS1DfOqV+Spr5xLqP75WZOu5nb7ibbhdkrV64AULRoUZMrEREREZG7uXLlCrly5bprG4s9OZE3C7HZbJw+fRo/Pz8sFkuGXDMqKoqiRYty6tQp/P39M+SarkD9kjT1jXPqF+fUL0lT3zinfkma+sa5jO4Xu93OlStXKFSoEFbr3UfFZrs7s1arlSJFiphybX9/f/3BcEL9kjT1jXPqF+fUL0lT3zinfkma+sa5jOyXe92RvUkTwERERETEZSnMioiIiIjLUpjNAF5eXgwbNgwvLy+zS8lU1C9JU984p35xTv2SNPWNc+qXpKlvnMvM/ZLtJoCJiIiISNahO7MiIiIi4rIUZkVERETEZSnMioiIiIjLUpgVEREREZelMJtGJk2aRIkSJfD29qZevXps2bLlru3nz59PhQoV8Pb2pmrVqixdujSDKs1YKemX6dOnY7FYEj28vb0zsNqMsWbNGh5//HEKFSqExWJh0aJF9zxn9erVBAcH4+XlRZkyZZg+fXq612mGlPbN6tWr7/jOWCwWzp49mzEFZ4BRo0ZRp04d/Pz8KFCgAKGhoRw8ePCe52WHv2NS0zfZ4e+ZyZMnU61aNcfi9iEhIfzyyy93PSc7fF8g5X2THb4vznz00UdYLBb69u1713aZ5XujMJsG5s6dS79+/Rg2bBg7duygevXqtGjRgvPnzzttv2HDBjp06EC3bt3YuXMnoaGhhIaGsmfPngyuPH2ltF/A2FnkzJkzjsfJkyczsOKMcfXqVapXr86kSZOS1f748eO0bt2ahx9+mPDwcPr27ctLL73E8uXL07nSjJfSvrnp4MGDib43BQoUSKcKM97vv/9Or1692LRpE2FhYcTHx9O8eXOuXr2a5DnZ5e+Y1PQNZP2/Z4oUKcJHH33E9u3b2bZtG4888ght2rRh7969Tttnl+8LpLxvIOt/X263detWpk6dSrVq1e7aLlN9b+xy3+rWrWvv1auX43lCQoK9UKFC9lGjRjlt365dO3vr1q0THatXr5795ZdfTtc6M1pK++Wbb76x58qVK4OqyxwA+8KFC+/aZuDAgfbKlSsnOta+fXt7ixYt0rEy8yWnb3777Tc7YP/nn38ypKbM4Pz583bA/vvvvyfZJrv8HXO75PRNdvx7xm6323Pnzm3/6quvnL6WXb8vN92tb7Lb9+XKlSv2smXL2sPCwuyNGjWy9+nTJ8m2mel7ozuz9ykuLo7t27fTtGlTxzGr1UrTpk3ZuHGj03M2btyYqD1AixYtkmzvilLTLwDR0dEUL16cokWL3vNfy9lFdvi+3K8aNWoQFBREs2bNWL9+vdnlpKvIyEgA8uTJk2Sb7PqdSU7fQPb6eyYhIYE5c+Zw9epVQkJCnLbJrt+X5PQNZK/vS69evWjduvUd3wdnMtP3RmH2Pl24cIGEhAQKFiyY6HjBggWTHLd39uzZFLV3Ranpl/LlyzNt2jR++uknvvvuO2w2G/Xr1+fPP//MiJIzraS+L1FRUVy7ds2kqjKHoKAgpkyZwg8//MAPP/xA0aJFady4MTt27DC7tHRhs9no27cvDz74IFWqVEmyXXb4O+Z2ye2b7PL3zO7du8mZMydeXl707NmThQsXUqlSJadts9v3JSV9k12+LwBz5sxhx44djBo1KlntM9P3xj3DryiShJCQkET/Oq5fvz4VK1Zk6tSpjBw50sTKJLMqX7485cuXdzyvX78+R48eZezYscycOdPEytJHr1692LNnD+vWrTO7lEwnuX2TXf6eKV++POHh4URGRrJgwQI6d+7M77//nmRoy05S0jfZ5fty6tQp+vTpQ1hYmEtOcFOYvU/58uXDzc2Nc+fOJTp+7tw5AgMDnZ4TGBiYovauKDX9cjsPDw9q1qzJkSNH0qNEl5HU98Xf3x8fHx+Tqsq86tatmyXDXu/evVmyZAlr1qyhSJEid22bHf6OuVVK+uZ2WfXvGU9PT8qUKQNArVq12Lp1K+PHj2fq1Kl3tM1u35eU9M3tsur3Zfv27Zw/f57g4GDHsYSEBNasWcPEiROJjY3Fzc0t0TmZ6XujYQb3ydPTk1q1arFy5UrHMZvNxsqVK5McgxMSEpKoPUBYWNhdx+y4mtT0y+0SEhLYvXs3QUFB6VWmS8gO35e0FB4enqW+M3a7nd69e7Nw4UJWrVpFyZIl73lOdvnOpKZvbpdd/p6x2WzExsY6fS27fF+Scre+uV1W/b40adKE3bt3Ex4e7njUrl2bjh07Eh4efkeQhUz2vcnwKWdZ0Jw5c+xeXl726dOn2/ft22fv0aOHPSAgwH727Fm73W63v/DCC/a3337b0X79+vV2d3d3++jRo+379++3Dxs2zO7h4WHfvXu3WR8hXaS0X0aMGGFfvny5/ejRo/bt27fbn332Wbu3t7d97969Zn2EdHHlyhX7zp077Tt37rQD9s8++8y+c+dO+8mTJ+12u93+9ttv21944QVH+2PHjtl9fX3tAwYMsO/fv98+adIku5ubm33ZsmVmfYR0k9K+GTt2rH3RokX2w4cP23fv3m3v06eP3Wq12lesWGHWR0hzr7zyij1Xrlz21atX28+cOeN4xMTEONpk179jUtM32eHvmbffftv++++/248fP27/448/7G+//bbdYrHYf/31V7vdnn2/L3Z7yvsmO3xfknL7agaZ+XujMJtG/u///s9erFgxu6enp71u3br2TZs2OV5r1KiRvXPnzonaz5s3z16uXDm7p6envXLlyvaff/45gyvOGCnpl759+zraFixY0N6qVSv7jh07TKg6fd1cTur2x82+6Ny5s71Ro0Z3nFOjRg27p6envVSpUvZvvvkmw+vOCCntm48//theunRpu7e3tz1Pnjz2xo0b21etWmVO8enEWX8Aib4D2fXvmNT0TXb4e+bFF1+0Fy9e3O7p6WnPnz+/vUmTJo6wZrdn3++L3Z7yvskO35ek3B5mM/P3xmK32+0Zdx9YRERERCTtaMysiIiIiLgshVkRERERcVkKsyIiIiLishRmRURERMRlKcyKiIiIiMtSmBURERERl6UwKyIiIiIuS2FWRCQT++KLLyhatChWq5Vx48aZXU6SunTpQmhoqNlliEg25G52ASIi4lxUVBS9e/fms88+4+mnnyZXrlxmlyQikukozIqIZFIRERHEx8fTunVrgoKCzC5HRCRT0jADEZHbNG7cmNdff52BAweSJ08eAgMDGT58eKI2ERERtGnThpw5c+Lv70+7du04d+5ciq5zt/eYPn06VatWBaBUqVJYLBZOnDjh9H1OnTpFu3btCAgIIE+ePLRp0yZR25tDAEaMGEH+/Pnx9/enZ8+exMXFOdrExsby+uuvU6BAAby9vWnQoAFbt25NdJ29e/fy2GOP4e/vj5+fHw899BBHjx5N1Gb06NEEBQWRN29eevXqRXx8vOO1zz//nLJly+Lt7U3BggV55plnUtRfIiLOKMyKiDgxY8YMcuTIwebNm/nkk0947733CAsLA8Bms9GmTRsuXbrE77//TlhYGMeOHaN9+/bJfv97vUf79u1ZsWIFAFu2bOHMmTMULVr0jveJj4+nRYsW+Pn5sXbtWtavX0/OnDlp2bJlorC6cuVK9u/fz+rVq/n+++/58ccfGTFihOP1gQMH8sMPPzBjxgx27NhBmTJlaNGiBZcuXQLgr7/+omHDhnh5ebFq1Sq2b9/Oiy++yI0bNxzv8dtvv3H06FF+++03ZsyYwfTp05k+fToA27Zt4/XXX+e9997j4MGDLFu2jIYNGya7v0REkmQXEZFEGjVqZG/QoEGiY3Xq1LG/9dZbdrvdbv/111/tbm5u9oiICMfre/futQP2LVu2JOsayXmPnTt32gH78ePHk3yfmTNn2suXL2+32WyOY7GxsXYfHx/78uXL7Xa73d65c2d7njx57FevXnW0mTx5sj1nzpz2hIQEe3R0tN3Dw8M+a9Ysx+txcXH2QoUK2T/55BO73W63Dxo0yF6yZEl7XFyc0zo6d+5sL168uP3GjRuOY23btrW3b9/ebrfb7T/88IPd39/fHhUVlaz+ERFJLt2ZFRFxolq1aomeBwUFcf78eQD2799P0aJFE90prVSpEgEBAezfvz9Z758W7wGwa9cujhw5gp+fHzlz5iRnzpzkyZOH69evJxoCUL16dXx9fR3PQ0JCiI6O5tSpUxw9epT4+HgefPBBx+seHh7UrVvXUUt4eDgPPfQQHh4eSdZSuXJl3NzcHM9v7bNmzZpRvHhxSpUqxQsvvMCsWbOIiYlJ9ucUEUmKJoCJiDhxe2izWCzYbDaTqkladHQ0tWrVYtasWXe8lj9//jS7jo+Pzz3b3K3P/Pz82LFjB6tXr+bXX39l6NChDB8+nK1btxIQEJBmdYpI9qM7syIiKVSxYkVOnTrFqVOnHMf27dvH5cuXqVSpUoa9B0BwcDCHDx+mQIEClClTJtHj1qW8du3axbVr1xzPN23aRM6cOSlatCilS5fG09OT9evXO16Pj49n69atjlqqVavG2rVrE03oSil3d3eaNm3KJ598wh9//MGJEydYtWpVqt9PRAQUZkVEUqxp06ZUrVqVjh07smPHDrZs2UKnTp1o1KgRtWvXBmDixIk0adLkvt4jOTp27Ei+fPlo06YNa9eu5fjx46xevZrXX3+dP//809EuLi6Obt26sW/fPpYuXcqwYcPo3bs3VquVHDly8MorrzBgwACWLVvGvn376N69OzExMXTr1g2A3r17ExUVxbPPPsu2bds4fPgwM2fO5ODBg8mqc8mSJUyYMIHw8HBOnjzJt99+i81mo3z58sn+rCIizijMioikkMVi4aeffiJ37tw0bNiQpk2bUqpUKebOnetoc+HChTuWrUrpeySHr68va9asoVixYjz11FNUrFiRbt26cf36dfz9/R3tmjRpQtmyZWnYsCHt27fniSeeSLTc2EcffcTTTz/NCy+8QHBwMEeOHGH58uXkzp0bgLx587Jq1Sqio6Np1KgRtWrV4ssvv7zrGNpbBQQE8OOPP/LII49QsWJFpkyZwvfff0/lypVT9HlFRG5nsdvtdrOLEBGR9NOlSxcuX77MokWLzC5FRCTN6c6siIiIiLgshVkRERERcVkaZiAiIiIiLkt3ZkVERETEZSnMioiIiIjLUpgVEREREZelMCsiIiIiLkthVkRERERclsKsiIiIiLgshVkRERERcVkKsyIiIiLishRmRURERMRl/T9yMt78I+ASmgAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(learning_rates):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_f1'], color=c[idx], label=f'{p} learning_rate')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_f1')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"executionInfo":{"status":"ok","timestamp":1712734621568,"user_tz":-480,"elapsed":7,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"36577d81-ba8e-43a8-abaf-61fe9244ece2","id":"7qLuViXgisZY"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(learning_rates):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_acc'], color=c[idx], label=f'{p} learning_rate')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_acc')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712734621568,"user_tz":-480,"elapsed":6,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"936408ac-8a77-44f7-8fa1-6dca6d6138a1","id":"p72nxivmisZY"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(learning_rates):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_precision'], color=c[idx], label=f'{p} learning_rate')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_precision')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712734623035,"user_tz":-480,"elapsed":1473,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"8a2da643-33fc-4b31-add5-8ab29f2dd7c4","id":"kcvctVcPisZY"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(learning_rates):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_recall'], color=c[idx], label=f'{p} learning_rate')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_recall')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712734623036,"user_tz":-480,"elapsed":5,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"0222090e-fdbb-47cc-dbbb-ee2feb2e6ea6","id":"7NDVfxjDisZY"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# **NO OPTIMAL BATCH SIZE**"],"metadata":{"id":"HDfk8zc0iurl"}},{"cell_type":"code","source":["# TEST LEARNING RATES\n","def find_optimal_hyperparameter(train_dataset, eval_dataset, parameters, mode):\n","\n","    # train_dataset and eval_dataset already in folds\n","    cross_validation_accuracies = {}\n","    cross_validation_times = {}\n","\n","    for p in parameters:\n","      print(f\"{p} {mode}:\")\n","      cross_validation_accuracies[p] = {}\n","      cross_validation_accuracies[p]['eval_loss'] = []\n","      cross_validation_accuracies[p]['train_loss'] = []\n","      cross_validation_accuracies[p]['eval_f1'] = []\n","      cross_validation_accuracies[p]['eval_acc'] = []\n","      cross_validation_accuracies[p]['eval_precision'] = []\n","      cross_validation_accuracies[p]['eval_recall'] = []\n","      times = []\n","\n","      for i in range(5):\n","          # each fold\n","          model = (AutoModelForSequenceClassification\n","          .from_pretrained(model_name, num_labels=num_labels, id2label=id2label, label2id=label2id)\n","          .to(device))\n","\n","          tokenized_train = train_dataset[i].map(tokenize, batched=True)\n","          tokenized_eval = eval_dataset[i].map(tokenize, batched=True)\n","          tokenized_train = tokenized_train.map(lambda x: {\"label\": label2id[x['emotion']]})\n","          tokenized_eval = tokenized_eval.map(lambda x: {\"label\": label2id[x['emotion']]})\n","          logging_steps = len(tokenized_train) // p\n","          new_model = f\"distilbert-lyrics-{i+1}\"\n","\n","          training_args = TrainingArguments(output_dir=new_model,\n","                                            num_train_epochs=no_epochs,\n","                                            learning_rate=0.0001,\n","                                            per_device_train_batch_size=p,\n","                                            per_device_eval_batch_size=p,\n","                                            weight_decay=0.01,\n","                                            evaluation_strategy=\"epoch\",\n","                                            save_strategy=\"epoch\",\n","                                            disable_tqdm=False,\n","                                            logging_steps=logging_steps,\n","                                            log_level=\"error\")\n","\n","          trainer = Trainer(model=model, args=training_args,\n","                            compute_metrics=compute_metrics,\n","                            train_dataset=tokenized_train,\n","                            eval_dataset=tokenized_eval,\n","                            tokenizer=tokenizer\n","                            )\n","          trainer.train();\n","          train = trainer.state.log_history[:-1:2]\n","          eval = trainer.state.log_history[1:-1:2]\n","          cross_validation_accuracies[p]['train_loss'].append([e['loss'] for e in train])\n","          cross_validation_accuracies[p]['eval_loss'].append([e['eval_loss'] for e in eval])\n","          cross_validation_accuracies[p]['eval_f1'].append([e['eval_f1'] for e in eval])\n","          cross_validation_accuracies[p]['eval_acc'].append([e['eval_accuracy'] for e in eval])\n","          cross_validation_accuracies[p]['eval_precision'].append([e['eval_precision'] for e in eval])\n","          cross_validation_accuracies[p]['eval_recall'].append([e['eval_recall'] for e in eval])\n","\n","      cross_validation_accuracies[p]['eval_loss'] = np.mean(cross_validation_accuracies[p]['eval_loss'], axis=0)\n","      cross_validation_accuracies[p]['train_loss'] = np.mean(cross_validation_accuracies[p]['train_loss'], axis=0)\n","      cross_validation_accuracies[p]['eval_f1'] = np.mean(cross_validation_accuracies[p]['eval_f1'], axis=0)\n","      cross_validation_accuracies[p]['eval_acc'] = np.mean(cross_validation_accuracies[p]['eval_acc'], axis=0)\n","      cross_validation_accuracies[p]['eval_precision'] = np.mean(cross_validation_accuracies[p]['eval_precision'], axis=0)\n","      cross_validation_accuracies[p]['eval_recall'] = np.mean(cross_validation_accuracies[p]['eval_recall'], axis=0)\n","      # print(f\"mean cross-validation loss = {cross_validation_accuracies[p]['eval_loss'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_f1 = {cross_validation_accuracies[p]['eval_f1'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_acc = {cross_validation_accuracies[p]['eval_acc'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_precision = {cross_validation_accuracies[p]['eval_precision'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_recall = {cross_validation_accuracies[p]['eval_recall'][-1]*100:.2f}%\")\n","\n","\n","    return cross_validation_accuracies\n","\n","no_epochs = 5\n","mode = 'batch_size'\n","cross_validation_accuracies = find_optimal_hyperparameter(train_ds, val_ds, batch_sizes, mode)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["11b4fcd69df547129e553b54c3a1befe","03cdda391f5b4e0b94215a94cf4b396f","b09689d1414d4a448928627a2a0b7747","888994178b864fa7a97b5f2494f515f9","688d7e60b020440cb479a0ea7b1915d2","5ee9d0563123429eb8a4c2e17c061549","74c4814309704af285e02bbf2df6db06","ab1ef6ce5b0041d480409898432d6855","5344654b636a4bcb8630811fb3911e02","99893cffdefc47349387285ab205a97c","616d20c6e1534893a4f6486b8090ac58","0a0e4b202f1542ddb3ebb111c3767f0f","b4ff3d90b0da4f7b8b1436655e0a6b83","eb49dbb91ae8495094c1520cf648656a","f52ceb11256946a389b9b91dd98706bf","e05b5d09bc2644ecb9a0da6be7191778","437532ea06f441bbba81590fcaf23f64","025cdc346ad94044b47cfaf61b9e6f1b","5db6449b8cb74d819dbf5a5578accbc6","d481c8a4556840069572c427e67ed5a9","3fd1866128e9417dab87ef3f250d5727","79e98111d1fb410887c5c303ae2b28fc","5d3f52d912a44d66a351f6e4762c5274","c2eb02bc07f44d3da8e81b9e6ca99d9c","84105c61b0f143fbb796210cddcffc13","f660cc6cf4614afd852936fe0780e82b","53af2acecf2b4c48bc8e8c5bd1a9982b","6746259ab021445d9eab9256fed5ca8d","0d280580dd2d4ffd87a2a18c5beb7d4f","3c167597007f434ca71678ce51b1007f","f48903bbe3824d53960d4b78596131a6","df205dc7a3ae47bbbb0e6b19faf819ff","acb865dc0ae942a499c65f36b487b1fc","76c35eee9bef425ea38abea5596aeb08","5f42b4ee9a0f44e99da9d1068d31fc36","81d08234b52544adaf43b2c378b7a051","9c305185053a4839ab4c06800a8f74d2","f295134b2bd345e3a9951c42c84bd296","56b7eb30c8dc40f988f29fe17fe251b4","518ec2ffa73f494a86b9785924166cd5","25cf0df7104342ab801c9e1b0b90261f","f061fff75fe8464abf14452e91e7511a","b3966b87064544b3b98d9c0673ebb402","3d9872124aab45ed88814c1ba335e9f5","be8806c87ee14323b3d1aa41454664b4","abb68bccaf324dbcaf936d94a952649f","8b805405652645cd9c3c2353ac67b1f2","0bdd1656576849d1be21dcd86259005b","f8cef3dc1c7d4361963b87aba4779793","154e29ad4fc341b0b00296bb34eb5f77","1cc0dbad90504188ae4f965c27253ba0","2ffe260270014a0996ebb77e05c1e51b","5dc8e80e2dc54325956a7bfa00629553","be25f879f9cd410f8311d0b78b229351","670a10f96884409a84dda7ff17d5dd25","2674bccab7674a5ea39e380497f58b92","239309a9bf774a7ca51b4e7cef792006","a1afbd7a167045d8b79054f6c0aacb40","66f7bfa3e69b43bb898b6bcdd7d58a31","3835dafa28594879bc440745c4458693","a6d754439cf848a4ae524ad99598339d","0b77456373654fb1a731162185247445","653a322267ba4c77965c5bf269180c77","5d2c79559fc34020af52ab5f12698a17","98dcbf40da1b4c56bdb85669b059acb7","9f331859fd574e6e8a3cfb33dfacee4a","daed62ff3f6d4ea595204169c0a845b4","c10176ce1cef4cef86cec1a135ee3164","6747923f347b4d45945dfd2b9a081dcb","884d6425b2264bb5a8cb1a518458b766","615ac0bc4db94889b97e6a41c821e4eb","cf042c70089f4d47a18a37873fb4ba41","7af0a1888ab94489bb4f1d36c23c7126","790e0fcd14cf4037aec133128ce6bfad","1734efda42344d6d95ac65a91e543064","b3dd005e39b54b2f9c7115f7147d3756","541fe67891ca44249d3c5b16bc1094d7","f3adef2baadf49dc85b9aa795cf43df2","410ae50698ec41b69693d69077d4da5a","3382cac9a20f48b989dc0ce14902f26a","84c15da3047d4b78b2f89391d9f10a09","25912ecb3b754e0bbe08df5eae7d1ed4","02b4aeb957134fcbb7c6d466bdcb669e","755321fd57214a71927046bf16997e9d","593fe9e318744cbdb7dc872da2efbd01","98e9fe1657154f91bc20c88979f69bd9","54650d3d832540ac92750f96c1870d03","2bba1151ec28426bb5e6947b43234890","0dfa8cffbabc44cba946ed37ded9d485","6ba8840858e54854a48397b52c0fc575","b4af0403718b4d7f9151cb37ed069e54","a4573a313a7a43b3b270bac64b9ef93d","467915c8b42942d5b8be6514056dca6f","f7c1bbe627e24edcbaef8083dbe1ff9a","42d6b9a43928499ba4aafbe17eb65dc5","2d88af12fc794bcc938aeada605f721f","7f11bc5829d84a49a5bebc0d78ac5a16","2c14b972f6394c77a2eb17f9f0e97fab","65abfa825fa842b7a490bb674259d6c4","66e94133227c42b8ac0c331851e3f50d","024d4df0804741d4a1e9cd11f666d481","711c17611fcd46288ad53786c110904f","4492bfcbc2dc4047a8a341621503ba75","61b9156eac00475984d971211c2268d4","f56db732f24d437a990d5c8e21001316","dceff19b4fd24523aac8ea7aa6debd94","5015b3e3f37c408eba7b484bb2eae003","a52fa68cd3bb465e910dbe5126e1ee5d","5b6a316b71cb4d12a3884b1677ca4314","63d8fcf8b0f64e089b29e8dd0a7c7e46","e70bc319238b4b549eb66674a4fdd1e5","61d6c6e24d334a13a18d72474929a04b","1945c2cc10724b21bc60be3435bdf652","8c21c90c631744e7a0bc7f0fa7b365f8","13c8aa0476b24121b0482163811ab037","6cde72bb7e1c4d9ca316ab84be4687ed","adcb56c3ae2e4df891c8258e7547063a","c17f649384784d68ae19822383463e7d","93b0d8e916b44a9795c5d05940eae399","f1198a0f0d4a454c84437f772385a364","2ca36988341b4366948c5914c095aed0","59fecef89cdc4c43ba5014b74788e1af","19f834ee9a1b43ee9a224bcca4dbb3e2","f2721a8250ad4b32b13f68892e3b3f70","8d1bd52bddbb49e9a211c56f60d5858a","7b86cfed0eb54c5f961695e53b576a6d","a4b1047c8a4c471995777c63cf5061d4","ce786488f7404d88826da56dfa2b8b76","1c5461d9c2d94eb89551b14c66a4df4c","b683a10e93cf40cd9b9bf76003dac9af","852c0d5e3d944e57a7dd99c07cacdda1","13877db7abfc42d69fe11a48a0075be8","31faeb0308a844938c5c0509a932920c","742b4a870eb34816b072509f241d407c","d8dbd6bca5eb46c7abcb4932e1cc7585","ef27d317a8194657ae79ba41d476c775","d453941cd2124561a90ed3af5c219520","2cf0e4220b4d4e3ebc4565a09ec79a1c","b9d2e3da3ee14f33b18aecb3352eda85","2d3e7a407d264aba9b2d9e0534936bb7","f669c24c4e3a486fbb5cbf21dec4aef1","d83892a04e2c4e36847e2614d4efa63b","712779d44019418fa2cb7cb2045220c9","edef8c885522456f9ed631205d486f62","d40b4767c20b447e87f52c810f9eed30","f10312f01e9e4a51addaf4eed6948d12","820e9f05a49d498c9585c8e283737f2b","739d7fe16bb34564bb670d4ea8f68320","1e226e318f01439ab6014ffe21ae7a4e","a20feed0fe784ecb93e465a35c08b851","4f496704f1c14c02b7a6e9b1d66e4412","fbfec290e0c744c992ae8c9bce3112d0","4c3fc45548e34d8d94561bd4ce3e967f","c05ed3612aa04f04a55af0a4f8272f44","cc4d6267fc3d4406b3a76a1b6fcd7558","ddec6361f10a44d59dcad99b066dda1a","e99f5543449340b1a5781b6b6c0f2b54","d64147fc06bb46f1a5d8ca5ef863facf","6908555548e142f5b013faefc63c2d10","aeebc2adc111450da767d2a41c4d8967","295f3d9d190c4683a0fe828a69e6eba2","180178b373244ea29f374563bdea9ce3","5a6d57bf66ae4b07b51acc53f59c6ac1","13f8d327706c45ceadaa0016d16e37dc","f5df096880db4b1b9d81d9920770f5d6","cb7a769b885d44cea998b65db8158f86","f2a3efae3e16442992ceb09bfad2e72a","8d5253956e4f4268ba29f9432876ddcc","87fed2a184b142809083afd7cbbbf4aa","8ed54f5737bd4c9b81ec4d5bd53e1f6f","f475c58777d94f66ad6b0a567bcb2b97","76d8f9e974dc41aaa7d8084a8ca39e0e","13f6c2061a4045a59a2a6b0a40a7de74","7cf427aef03b4cd4aacdee457c54689b","f15d94d9651d4c188cff669a579dc0df","8fe89aaf44ad4478aa345d4b77d3e98c","ae647404918b4f2bac91391e18c76478","4ee1d955f3d7411883747acbe9ccbce4","3665283069bd4326927d16420359f1d6","9894c1e3caf94aa4990bdf61a0ba6b9d","7601f88391ad4b549b9fe60ea0ae3930","1c373fdb193e481792fdfc72663d4fad","2a1e774abb4a461cbace9c040248c86a","3a60b60b244345bdb2da2e5eae6531e1","cfa487b892bf44acbd1f850a37849123","b60c439fd16e409f84c5ff698b89192e","202a0e091de04b1986fd903eafd652e8","ece09ed6a4314473a9256178ae34500d","d7844ce8432141e69ee080c2a6860735","593a64153b7d44a7ae064001f6792a75","eabc1047db2042d19a141b2a21a918fe","3f5e4e9a39e04e968197dc6004787ae9","12fe8cf92cf94a909e6598406eb6eff3","0d5aad0aa03d40e8ad1ecfd3fe77f335","a79200394d234435b1a75670a4eb1220","5a0ce8ac8bd14a8cbc5d4f5bbde46350","f672ab932dc84ae089876a878143dc33","626ca3b3a5f14fff84c616bf76c8587a","543c50f0d58c408aa7056369b6d872a0","3025429d001c49fc9ee9cce1ea03a258","b8f0cbdbe43e4e05ba40c1a23b9bf41a","bb4f56ab0bef46de85e98e37e2e8b013","c0bb78ed63c74028af4aeba9da861a78","4786435bde74451a92524873e3dad22c","717f6b9b58eb4129af0f329ec8426016","0b599f17a4cd4b73b28988843e8e6660","404b427fdb9d4ec48ca9ef37d7fdd2c6","f32b07ab5bba43cb94148a994f4e5518","230b47d53e244ed5915c615982289dac","cbf06021d7464cc0a36bd8614fe3b641","1c056b9eb6904f9aa993e6b0f43b7619","676456da96c244729f7e4d83d3190a33","2e15d18c3c6b4ee6aa38c296125fd32b","07c92a763fc046ba95c72c01ce0342a6","b70c5873fef54503a03308133328c303","52ae904d870245bd9b2c543a2cc01d81","085fcce8fb844c26aaa0f5e9d9050100","b46ba90b45f94e409eb03904b9758162","5ee6151bdc8c4bc3863903e6dc7b9382","c5894408f16e4bb8a914ccbb3979de2b","111f149eea5d4e9a85f0931809d03c9d","af5c041ce2364662b2fbc5eeef9bf808","a7e4936a5c6b4d6099c7df1dbdccb259","057c0a2926014e0a8e42117999ae2e34","bb2a04baf0424512856cff8a04d24631","b6b857e77a1d47ba810475a299ba3a75","2f84128c8adf4e71b87ddf08a00810fd","4d22ca616c4d4f1f8e29cb87c6759fd6","11366a63f4d347e8bc0a1041afbeffb9","8e7b1ff4fcb048e9ad06bf102b07795e","78f80bfc0b8147b6a50575ac68304d2b","09a667c550b4490ba8e8692b71d2d4f7","24fa14e37b9f42efbddabf3b5e6dd64e","f5b32528b9054757b89caaff7a68c3cb","fe6cc74df8f44be4a7fd51b61757cb2f","e82fef0948ec435aafc722bf0390e645","da9744571a884f4a9861f9226947d3c4","03defcbc7717481d89de5ce07a5b7c9e","3ea458d0ad9f4223bd8f2035e9ab41e6","aa3e24f68bad4915b5b1c6d7dd693c42","4c426edcf5204b05bc4c234e3d280fa5","ca940d025c03413980549afa71134d66","4e6dc5de75e14dc486fc798cf1ef1ed8","300c4a64d912439f927f99223bf1c939","d90d1052d3e0444096e55b1ddcf48c6e","f2ffc3ea2a2a4fcd8233777890b64ebf","59d32234142441eb8be5f6838ab01526","8ece7e65c9fb431693fbe8dd39de6837","723cfc66f34141f3bd77e5bb5c294f3f","97f8814cb6ad45419229726223672880","daa6aae14ac04515b5cde19cad5819ad","f609890b7b164a12aeb5b7a56d818e12","40e58d9a802243b38eb675f91a8f8c39","16aa0d6581c9426a93bc75de30ab0217","4f6892319e5843cbb6e3613fc779b07a","a81f670edd88425f8c91dc4723e772d1","1ae0ca3d61304026938745e14d4bb50a","a7a4df2ef7644463a23abf0c2a606ed9","73d06d8283864574a763627ede36f737","cdeadd119cac4be68a03f5db5742a032","1e98da7836054ff0909c84043fc2c287","b7c74e35fa8f44e18fac72016bc3524f","c4a2833c09174249a5b34fe74c069053","b9875309d7a34dff8acc4d1132cff547","7d119b1647334e8aab520bf3bc9c338f","e82ee7ddce0e4839b2a3c15fb51d2189","a5cd764f035647f4ad4ccfd1b34d46d7","41c17c8b63a44b92b31515602c5dcbc3","365638b51f3242b182aaaad016cc1031","30a6803ae18b423e9c6a5453a652a598","58efa6db05df42c9a4595db50e9356a9","3f211a89610a4e0f807d07f6c00898d2","5e3dd798ca1d407c9c3a2ee045efccbd","c532abad9bb54293898744b56a9b2669","c0a94ab8f2604075a9f7c4016360bd07"]},"id":"AA-Q03GwisZX","executionInfo":{"status":"ok","timestamp":1712742579402,"user_tz":-480,"elapsed":7632437,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"8f020659-a5d1-48e3-dad0-2a306b246f34"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["8 batch_size:\n"]},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/268M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"11b4fcd69df547129e553b54c3a1befe"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert/distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0a0e4b202f1542ddb3ebb111c3767f0f"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5d3f52d912a44d66a351f6e4762c5274"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"76c35eee9bef425ea38abea5596aeb08"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"be8806c87ee14323b3d1aa41454664b4"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='1170' max='1170' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [1170/1170 08:34, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.797600</td>\n","      <td>2.637187</td>\n","      <td>0.221030</td>\n","      <td>0.166973</td>\n","      <td>0.148986</td>\n","      <td>0.221030</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.238600</td>\n","      <td>2.457355</td>\n","      <td>0.287554</td>\n","      <td>0.235669</td>\n","      <td>0.232478</td>\n","      <td>0.287554</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.662300</td>\n","      <td>2.310528</td>\n","      <td>0.349785</td>\n","      <td>0.310676</td>\n","      <td>0.368201</td>\n","      <td>0.349785</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.173200</td>\n","      <td>2.191671</td>\n","      <td>0.379828</td>\n","      <td>0.362803</td>\n","      <td>0.368672</td>\n","      <td>0.379828</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.831500</td>\n","      <td>2.244572</td>\n","      <td>0.379828</td>\n","      <td>0.366552</td>\n","      <td>0.370412</td>\n","      <td>0.379828</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1865 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2674bccab7674a5ea39e380497f58b92"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/467 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"daed62ff3f6d4ea595204169c0a845b4"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1865 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f3adef2baadf49dc85b9aa795cf43df2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/467 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0dfa8cffbabc44cba946ed37ded9d485"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='1170' max='1170' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [1170/1170 08:39, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.696000</td>\n","      <td>2.455577</td>\n","      <td>0.306210</td>\n","      <td>0.230104</td>\n","      <td>0.219513</td>\n","      <td>0.306210</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.018700</td>\n","      <td>2.266865</td>\n","      <td>0.325482</td>\n","      <td>0.266467</td>\n","      <td>0.253279</td>\n","      <td>0.325482</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.503800</td>\n","      <td>2.194697</td>\n","      <td>0.376874</td>\n","      <td>0.335775</td>\n","      <td>0.313413</td>\n","      <td>0.376874</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.016200</td>\n","      <td>2.258536</td>\n","      <td>0.359743</td>\n","      <td>0.339703</td>\n","      <td>0.390675</td>\n","      <td>0.359743</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.691800</td>\n","      <td>2.343640</td>\n","      <td>0.349036</td>\n","      <td>0.332231</td>\n","      <td>0.367006</td>\n","      <td>0.349036</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"66e94133227c42b8ac0c331851e3f50d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e70bc319238b4b549eb66674a4fdd1e5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"59fecef89cdc4c43ba5014b74788e1af"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"31faeb0308a844938c5c0509a932920c"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='1170' max='1170' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [1170/1170 08:31, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.786800</td>\n","      <td>2.682281</td>\n","      <td>0.240343</td>\n","      <td>0.165930</td>\n","      <td>0.151815</td>\n","      <td>0.240343</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.158200</td>\n","      <td>2.288383</td>\n","      <td>0.347639</td>\n","      <td>0.279933</td>\n","      <td>0.340819</td>\n","      <td>0.347639</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.566800</td>\n","      <td>2.320867</td>\n","      <td>0.341202</td>\n","      <td>0.306997</td>\n","      <td>0.338308</td>\n","      <td>0.341202</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.031500</td>\n","      <td>2.255504</td>\n","      <td>0.381974</td>\n","      <td>0.366507</td>\n","      <td>0.398605</td>\n","      <td>0.381974</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.691800</td>\n","      <td>2.227829</td>\n","      <td>0.401288</td>\n","      <td>0.385077</td>\n","      <td>0.398297</td>\n","      <td>0.401288</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1865 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"edef8c885522456f9ed631205d486f62"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/467 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cc4d6267fc3d4406b3a76a1b6fcd7558"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1865 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cb7a769b885d44cea998b65db8158f86"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/467 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ae647404918b4f2bac91391e18c76478"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='1170' max='1170' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [1170/1170 08:31, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.818800</td>\n","      <td>2.319489</td>\n","      <td>0.306210</td>\n","      <td>0.189829</td>\n","      <td>0.187438</td>\n","      <td>0.306210</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.208400</td>\n","      <td>2.078808</td>\n","      <td>0.372591</td>\n","      <td>0.319391</td>\n","      <td>0.328096</td>\n","      <td>0.372591</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.656800</td>\n","      <td>1.943277</td>\n","      <td>0.432548</td>\n","      <td>0.383851</td>\n","      <td>0.363242</td>\n","      <td>0.432548</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.158900</td>\n","      <td>1.945747</td>\n","      <td>0.415418</td>\n","      <td>0.401501</td>\n","      <td>0.446348</td>\n","      <td>0.415418</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.805900</td>\n","      <td>1.921799</td>\n","      <td>0.436831</td>\n","      <td>0.426823</td>\n","      <td>0.448475</td>\n","      <td>0.436831</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ece09ed6a4314473a9256178ae34500d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"543c50f0d58c408aa7056369b6d872a0"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cbf06021d7464cc0a36bd8614fe3b641"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"111f149eea5d4e9a85f0931809d03c9d"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='1170' max='1170' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [1170/1170 08:32, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.746000</td>\n","      <td>2.752494</td>\n","      <td>0.236052</td>\n","      <td>0.133721</td>\n","      <td>0.102794</td>\n","      <td>0.236052</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.217800</td>\n","      <td>2.482411</td>\n","      <td>0.302575</td>\n","      <td>0.228621</td>\n","      <td>0.219959</td>\n","      <td>0.302575</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.736600</td>\n","      <td>2.428088</td>\n","      <td>0.306867</td>\n","      <td>0.234191</td>\n","      <td>0.224786</td>\n","      <td>0.306867</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.241500</td>\n","      <td>2.443280</td>\n","      <td>0.332618</td>\n","      <td>0.314958</td>\n","      <td>0.347316</td>\n","      <td>0.332618</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.865700</td>\n","      <td>2.446894</td>\n","      <td>0.339056</td>\n","      <td>0.319578</td>\n","      <td>0.317050</td>\n","      <td>0.339056</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"stream","name":"stdout","text":["16 batch_size:\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"09a667c550b4490ba8e8692b71d2d4f7"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4e6dc5de75e14dc486fc798cf1ef1ed8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"16aa0d6581c9426a93bc75de30ab0217"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7d119b1647334e8aab520bf3bc9c338f"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:26, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.842300</td>\n","      <td>2.587761</td>\n","      <td>0.246781</td>\n","      <td>0.166727</td>\n","      <td>0.141343</td>\n","      <td>0.246781</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.258500</td>\n","      <td>2.496962</td>\n","      <td>0.270386</td>\n","      <td>0.224544</td>\n","      <td>0.218475</td>\n","      <td>0.270386</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.752200</td>\n","      <td>2.344963</td>\n","      <td>0.343348</td>\n","      <td>0.313894</td>\n","      <td>0.353054</td>\n","      <td>0.343348</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.250700</td>\n","      <td>2.168535</td>\n","      <td>0.379828</td>\n","      <td>0.354092</td>\n","      <td>0.352003</td>\n","      <td>0.379828</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.966200</td>\n","      <td>2.163390</td>\n","      <td>0.369099</td>\n","      <td>0.339658</td>\n","      <td>0.333626</td>\n","      <td>0.369099</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:28, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.801600</td>\n","      <td>2.542131</td>\n","      <td>0.256959</td>\n","      <td>0.174413</td>\n","      <td>0.139138</td>\n","      <td>0.256959</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.088500</td>\n","      <td>2.188288</td>\n","      <td>0.366167</td>\n","      <td>0.298510</td>\n","      <td>0.278408</td>\n","      <td>0.366167</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.572900</td>\n","      <td>2.146674</td>\n","      <td>0.374732</td>\n","      <td>0.330587</td>\n","      <td>0.308566</td>\n","      <td>0.374732</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.120700</td>\n","      <td>2.198709</td>\n","      <td>0.334047</td>\n","      <td>0.306422</td>\n","      <td>0.383019</td>\n","      <td>0.334047</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.838100</td>\n","      <td>2.155706</td>\n","      <td>0.376874</td>\n","      <td>0.360941</td>\n","      <td>0.417489</td>\n","      <td>0.376874</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:21, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.822500</td>\n","      <td>2.442780</td>\n","      <td>0.336910</td>\n","      <td>0.253834</td>\n","      <td>0.247026</td>\n","      <td>0.336910</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.135500</td>\n","      <td>2.248970</td>\n","      <td>0.369099</td>\n","      <td>0.287956</td>\n","      <td>0.289456</td>\n","      <td>0.369099</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.616700</td>\n","      <td>2.136099</td>\n","      <td>0.390558</td>\n","      <td>0.349882</td>\n","      <td>0.390860</td>\n","      <td>0.390558</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.130300</td>\n","      <td>2.140706</td>\n","      <td>0.405579</td>\n","      <td>0.388000</td>\n","      <td>0.411302</td>\n","      <td>0.405579</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.832100</td>\n","      <td>2.112775</td>\n","      <td>0.407725</td>\n","      <td>0.382818</td>\n","      <td>0.407172</td>\n","      <td>0.407725</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:24, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.822500</td>\n","      <td>2.220565</td>\n","      <td>0.376874</td>\n","      <td>0.286101</td>\n","      <td>0.263501</td>\n","      <td>0.376874</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.139100</td>\n","      <td>1.970206</td>\n","      <td>0.413276</td>\n","      <td>0.356969</td>\n","      <td>0.357654</td>\n","      <td>0.413276</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.559100</td>\n","      <td>1.802228</td>\n","      <td>0.453961</td>\n","      <td>0.413432</td>\n","      <td>0.411619</td>\n","      <td>0.453961</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.080500</td>\n","      <td>1.807868</td>\n","      <td>0.432548</td>\n","      <td>0.420670</td>\n","      <td>0.436931</td>\n","      <td>0.432548</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.764500</td>\n","      <td>1.789628</td>\n","      <td>0.449679</td>\n","      <td>0.440564</td>\n","      <td>0.448670</td>\n","      <td>0.449679</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:28, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.720900</td>\n","      <td>2.693542</td>\n","      <td>0.231760</td>\n","      <td>0.152452</td>\n","      <td>0.119154</td>\n","      <td>0.231760</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.129400</td>\n","      <td>2.525388</td>\n","      <td>0.296137</td>\n","      <td>0.207182</td>\n","      <td>0.211097</td>\n","      <td>0.296137</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.650900</td>\n","      <td>2.294386</td>\n","      <td>0.347639</td>\n","      <td>0.274589</td>\n","      <td>0.278408</td>\n","      <td>0.347639</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.170400</td>\n","      <td>2.348988</td>\n","      <td>0.354077</td>\n","      <td>0.332697</td>\n","      <td>0.331614</td>\n","      <td>0.354077</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.842600</td>\n","      <td>2.321598</td>\n","      <td>0.371245</td>\n","      <td>0.339579</td>\n","      <td>0.331982</td>\n","      <td>0.371245</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"stream","name":"stdout","text":["32 batch_size:\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='295' max='295' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [295/295 08:12, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.872700</td>\n","      <td>2.588088</td>\n","      <td>0.248927</td>\n","      <td>0.164426</td>\n","      <td>0.142797</td>\n","      <td>0.248927</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.229300</td>\n","      <td>2.392432</td>\n","      <td>0.302575</td>\n","      <td>0.245838</td>\n","      <td>0.241366</td>\n","      <td>0.302575</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.752700</td>\n","      <td>2.231669</td>\n","      <td>0.356223</td>\n","      <td>0.300893</td>\n","      <td>0.290247</td>\n","      <td>0.356223</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.316200</td>\n","      <td>2.066564</td>\n","      <td>0.405579</td>\n","      <td>0.359250</td>\n","      <td>0.358147</td>\n","      <td>0.405579</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>1.059300</td>\n","      <td>2.044280</td>\n","      <td>0.409871</td>\n","      <td>0.371003</td>\n","      <td>0.357328</td>\n","      <td>0.409871</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='295' max='295' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [295/295 08:13, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.917400</td>\n","      <td>2.593460</td>\n","      <td>0.284797</td>\n","      <td>0.182794</td>\n","      <td>0.148038</td>\n","      <td>0.284797</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.249000</td>\n","      <td>2.246022</td>\n","      <td>0.327623</td>\n","      <td>0.260534</td>\n","      <td>0.243341</td>\n","      <td>0.327623</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.718000</td>\n","      <td>2.098097</td>\n","      <td>0.391863</td>\n","      <td>0.349768</td>\n","      <td>0.369289</td>\n","      <td>0.391863</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.299100</td>\n","      <td>2.089242</td>\n","      <td>0.344754</td>\n","      <td>0.299875</td>\n","      <td>0.314933</td>\n","      <td>0.344754</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>1.045400</td>\n","      <td>1.986669</td>\n","      <td>0.408994</td>\n","      <td>0.373178</td>\n","      <td>0.382681</td>\n","      <td>0.408994</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='295' max='295' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [295/295 08:11, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.878100</td>\n","      <td>2.517044</td>\n","      <td>0.328326</td>\n","      <td>0.249381</td>\n","      <td>0.237036</td>\n","      <td>0.328326</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.233600</td>\n","      <td>2.363923</td>\n","      <td>0.326180</td>\n","      <td>0.239366</td>\n","      <td>0.237105</td>\n","      <td>0.326180</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.766100</td>\n","      <td>2.065078</td>\n","      <td>0.396996</td>\n","      <td>0.333860</td>\n","      <td>0.303458</td>\n","      <td>0.396996</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.286200</td>\n","      <td>1.999580</td>\n","      <td>0.388412</td>\n","      <td>0.348858</td>\n","      <td>0.382054</td>\n","      <td>0.388412</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>1.039000</td>\n","      <td>1.991989</td>\n","      <td>0.405579</td>\n","      <td>0.360862</td>\n","      <td>0.394466</td>\n","      <td>0.405579</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='295' max='295' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [295/295 08:13, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.920000</td>\n","      <td>2.303274</td>\n","      <td>0.389722</td>\n","      <td>0.285078</td>\n","      <td>0.270993</td>\n","      <td>0.389722</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.252700</td>\n","      <td>1.965799</td>\n","      <td>0.426124</td>\n","      <td>0.354439</td>\n","      <td>0.355417</td>\n","      <td>0.426124</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.723300</td>\n","      <td>1.852143</td>\n","      <td>0.428266</td>\n","      <td>0.394281</td>\n","      <td>0.430911</td>\n","      <td>0.428266</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.311500</td>\n","      <td>1.847212</td>\n","      <td>0.426124</td>\n","      <td>0.405561</td>\n","      <td>0.410513</td>\n","      <td>0.426124</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>1.056300</td>\n","      <td>1.761538</td>\n","      <td>0.468951</td>\n","      <td>0.451640</td>\n","      <td>0.467350</td>\n","      <td>0.468951</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='295' max='295' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [295/295 08:15, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.823600</td>\n","      <td>2.719255</td>\n","      <td>0.253219</td>\n","      <td>0.143472</td>\n","      <td>0.142538</td>\n","      <td>0.253219</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.182700</td>\n","      <td>2.531182</td>\n","      <td>0.274678</td>\n","      <td>0.190498</td>\n","      <td>0.162340</td>\n","      <td>0.274678</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.712200</td>\n","      <td>2.273903</td>\n","      <td>0.324034</td>\n","      <td>0.256671</td>\n","      <td>0.248275</td>\n","      <td>0.324034</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.283700</td>\n","      <td>2.257500</td>\n","      <td>0.339056</td>\n","      <td>0.304015</td>\n","      <td>0.297423</td>\n","      <td>0.339056</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>1.013400</td>\n","      <td>2.230629</td>\n","      <td>0.339056</td>\n","      <td>0.300068</td>\n","      <td>0.302937</td>\n","      <td>0.339056</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(batch_sizes):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['train_loss'], color=c[idx], label=f'{p} {mode}')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('train_loss')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712744164401,"user_tz":-480,"elapsed":1252,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"800b9a75-be9d-4c88-dc41-afc4fba331ef","id":"Iw6adtD68MVt"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(batch_sizes):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_f1'], color=c[idx], label=f'{p} {mode}')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_f1')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712744165786,"user_tz":-480,"elapsed":1389,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"d5e3e784-8083-4050-b4a9-d2971b2365f8","id":"Qa_MUvsI8MV2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(batch_sizes):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_acc'], color=c[idx], label=f'{p} {mode}')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_acc')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712744165787,"user_tz":-480,"elapsed":7,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"1a41f38d-c747-4d28-a52e-593deefeb156","id":"eK5HQKVI8MV2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(batch_sizes):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_precision'], color=c[idx], label=f'{p} {mode}')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_precision')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":544},"executionInfo":{"status":"ok","timestamp":1712744165787,"user_tz":-480,"elapsed":6,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"d4d54964-6b6a-46a7-f72d-b3f2593ea13f","id":"bv-cSroq8MV2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"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vgl16rg3HhEREZFCQAVvYWGM9RS1n36CunVhxAh3RyQiIiJSKKjgLSzmzIFVqyAgwFrK4O/v7ohERERECgUVvIXByZMwZIh1/PbbUKOGW8MRERERKUxU8Ho6hwN69YKUFGjUCIYOdXdEIiIiIoWKCl5P99FHsGEDFCsGsbHg6+vuiEREREQKFRW8nuzIEXj1Vet4wgTrEcIiIiIikisqeD1VRgb06AGpqfDUU/DKK+6OSERERKRQUsHrqSZOhG++gZAQmD0bfPRXJSIiIpIXqqI80YED8MYb1vGkSVC+vHvjERERESnEVPB6GrsduneH9HRo2dLaoUFERERE8kwFr6cZNw4SEiA8HD7+GGw2d0ckIiIiUqip4PUke/fCW29Zx1OnQlSUe+MRERER8QIqeD2Ej92OX8+ecOMGtGsHnTq5OyQRERERr6CC10NUXbQI28GDUKYMTJumpQwiIiIi+UQFrwewbd9O5WXLrBczZ1pFr4iIiIjkCxW87paaim+vXtgcDhxdukCbNu6OSERERMSrqOB1N39/HF26cLVsWTImTnR3NCIiIiJex8/dARR5/v44Xn+dDTVq8Gx4uLujEREREfE6usLrIRwBAe4OQURERMQrqeAVEREREa+mgldEREREvJoKXhERERHxaip4RURERMSrqeAVEREREa+mgldEREREvJoKXhERERHxaip4RURERMSrqeAVEREREa+mgldEREREvJoKXhERERHxaip4RURERMSrqeAVEREREa+mgldEREREvJoKXhERERHxaip4RURERMSrqeAVEREREa/m5+4APJExBoDk5GSXjGe320lNTSU5ORl/f3+XjFlYKDfOKS/ZU26cU16cU16yp9w4p7xkz9W5uVmn3azb7kQFrxMpKSkAREdHuzkSEREREbmTlJQUSpYsecc2NpOTsriIcTgc/Pjjj4SEhGCz2Qp8vOTkZKKjozl9+jShoaEFPl5hotw4p7xkT7lxTnlxTnnJnnLjnPKSPVfnxhhDSkoKUVFR+PjceZWurvA64ePjw3333efycUNDQ/UfTzaUG+eUl+wpN84pL84pL9lTbpxTXrLnytz81pXdm3TTmoiIiIh4NRW8IiIiIuLVVPB6gMDAQEaNGkVgYKC7Q/E4yo1zykv2lBvnlBfnlJfsKTfOKS/Z8+Tc6KY1EREREfFqusIrIiIi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m/Lly5sbN25kvveHP/zBdOzY0RhjzNKlS01oaKhJTk7OUX5ERHJKV3hFRPKoZs2aWV5HRkZy4cIFAA4dOkR0dHSWK67Vq1cnLCyMQ4cO5aj//OgD4Ntvv+Xo0aOEhIQQHBxMcHAwpUqV4vr161mWG9SqVYvixYtnvm7YsCFXrlzh9OnTHDt2DLvdzuOPP5553t/fn/r162fGkpiYSOPGjfH39882lho1auDr65v5+tc5e/rppylfvjwVK1aka9euLFiwgNTU1Bx/TxGR7OimNRGRPLq1sLPZbDgcDjdFk70rV65Qt25dFixYcNu5MmXK5Ns4xYoV+802d8pZSEgIe/bsIT4+nrVr1zJy5EhGjx7Nrl27CAsLy7c4RaTo0RVeEZECUK1aNU6fPs3p06cz3zt48CBJSUlUr17dZX0A1KlThyNHjlC2bFkqVaqU5c+vtzH79ttvuXbtWubr7du3ExwcTHR0NA8++CABAQFs3bo187zdbmfXrl2ZsdSsWZMtW7ZkuQktt/z8/IiJiWHChAl89913nDhxgg0bNuS5PxERUMErIlIgYmJieOSRR+jSpQt79uxh586ddOvWjaZNm1KvXj0ApkyZQvPmze+qj5zo0qULpUuXpnXr1mzZsoXjx48THx/PoEGD+Ne//pXZLj09nd69e3Pw4EFWrVrFqFGjGDhwID4+PpQoUYL+/fszbNgwVq9ezcGDB+nTpw+pqan07t0bgIEDB5KcnEynTp3YvXs3R44cYf78+Rw+fDhHcX711Vd88MEHJCYmcvLkSebNm4fD4aBq1ao5/q4iIs6o4BURKQA2m40VK1YQHh5OkyZNiImJoWLFiixevDizzaVLl27bsiu3feRE8eLF2bx5M/fffz9t27alWrVq9O7dm+vXrxMaGprZrnnz5lSuXJkmTZrQsWNHfv/732fZam38+PG0a9eOrl27UqdOHY4ePcqaNWsIDw8H4J577mHDhg1cuXKFpk2bUrduXT7++OM7run9tbCwMD7//HOeeuopqlWrxvTp0/nkk0+oUaNGrr6viMitbMYY4+4gRETEvXr06EFSUhLLly93dygiIvlOV3hFRERExKup4BURERERr6YlDSIiIiLi1XSFV0RERES8mgpeEREREfFqKnhFRERExKup4BURERERr6aCV0RERES8mgpeEREREfFqKnhFRERExKup4BURERERr/b/pfaYW7CPvOsAAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(batch_sizes):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_recall'], color=c[idx], label=f'{p} {mode}')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_recall')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712744167132,"user_tz":-480,"elapsed":1350,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"53ac3305-0409-4e89-fe46-ab8ae68101c4","id":"YUWtBLPh8MV2"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# **OPTIMAL WEIGHT DECAY = 0.0001**"],"metadata":{"id":"tn7bc5JOhFcy"}},{"cell_type":"code","source":["# TEST LEARNING RATES\n","def find_optimal_hyperparameter(train_dataset, eval_dataset, parameters, mode):\n","\n","    # train_dataset and eval_dataset already in folds\n","    cross_validation_accuracies = {}\n","    cross_validation_times = {}\n","\n","    for p in parameters:\n","      print(f\"{p} {mode}:\")\n","      cross_validation_accuracies[p] = {}\n","      cross_validation_accuracies[p]['eval_loss'] = []\n","      cross_validation_accuracies[p]['train_loss'] = []\n","      cross_validation_accuracies[p]['eval_f1'] = []\n","      cross_validation_accuracies[p]['eval_acc'] = []\n","      cross_validation_accuracies[p]['eval_precision'] = []\n","      cross_validation_accuracies[p]['eval_recall'] = []\n","      times = []\n","\n","      for i in range(5):\n","          # each fold\n","          model = (AutoModelForSequenceClassification\n","          .from_pretrained(model_name, num_labels=num_labels, id2label=id2label, label2id=label2id)\n","          .to(device))\n","\n","          tokenized_train = train_dataset[i].map(tokenize, batched=True)\n","          tokenized_eval = eval_dataset[i].map(tokenize, batched=True)\n","          tokenized_train = tokenized_train.map(lambda x: {\"label\": label2id[x['emotion']]})\n","          tokenized_eval = tokenized_eval.map(lambda x: {\"label\": label2id[x['emotion']]})\n","          logging_steps = len(tokenized_train) // batch_size\n","          new_model = f\"distilbert-lyrics-{i+1}\"\n","\n","          training_args = TrainingArguments(output_dir=new_model,\n","                                            num_train_epochs=no_epochs,\n","                                            learning_rate=0.0001,\n","                                            per_device_train_batch_size=batch_size,\n","                                            per_device_eval_batch_size=batch_size,\n","                                            weight_decay=p,\n","                                            evaluation_strategy=\"epoch\",\n","                                            save_strategy=\"epoch\",\n","                                            disable_tqdm=False,\n","                                            logging_steps=logging_steps,\n","                                            log_level=\"error\")\n","\n","          trainer = Trainer(model=model, args=training_args,\n","                            compute_metrics=compute_metrics,\n","                            train_dataset=tokenized_train,\n","                            eval_dataset=tokenized_eval,\n","                            tokenizer=tokenizer\n","                            )\n","          trainer.train();\n","          train = trainer.state.log_history[:-1:2]\n","          eval = trainer.state.log_history[1:-1:2]\n","          cross_validation_accuracies[p]['train_loss'].append([e['loss'] for e in train])\n","          cross_validation_accuracies[p]['eval_loss'].append([e['eval_loss'] for e in eval])\n","          cross_validation_accuracies[p]['eval_f1'].append([e['eval_f1'] for e in eval])\n","          cross_validation_accuracies[p]['eval_acc'].append([e['eval_accuracy'] for e in eval])\n","          cross_validation_accuracies[p]['eval_precision'].append([e['eval_precision'] for e in eval])\n","          cross_validation_accuracies[p]['eval_recall'].append([e['eval_recall'] for e in eval])\n","\n","      cross_validation_accuracies[p]['eval_loss'] = np.mean(cross_validation_accuracies[p]['eval_loss'], axis=0)\n","      cross_validation_accuracies[p]['train_loss'] = np.mean(cross_validation_accuracies[p]['train_loss'], axis=0)\n","      cross_validation_accuracies[p]['eval_f1'] = np.mean(cross_validation_accuracies[p]['eval_f1'], axis=0)\n","      cross_validation_accuracies[p]['eval_acc'] = np.mean(cross_validation_accuracies[p]['eval_acc'], axis=0)\n","      cross_validation_accuracies[p]['eval_precision'] = np.mean(cross_validation_accuracies[p]['eval_precision'], axis=0)\n","      cross_validation_accuracies[p]['eval_recall'] = np.mean(cross_validation_accuracies[p]['eval_recall'], axis=0)\n","      # print(f\"mean cross-validation loss = {cross_validation_accuracies[p]['eval_loss'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_f1 = {cross_validation_accuracies[p]['eval_f1'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_acc = {cross_validation_accuracies[p]['eval_acc'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_precision = {cross_validation_accuracies[p]['eval_precision'][-1]*100:.2f}%\")\n","      # print(f\"mean eval_recall = {cross_validation_accuracies[p]['eval_recall'][-1]*100:.2f}%\")\n","\n","\n","    return cross_validation_accuracies\n","\n","no_epochs = 5\n","batch_size = 16\n","mode = 'weight_decay'\n","cross_validation_accuracies = find_optimal_hyperparameter(train_ds, val_ds, weight_decays, mode)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["1dcd1362eefc4c49b3291f89095f4292","7d14ff2a278d475bbfb7eb9416484d24","0d6f5259be984025b65af00c106d5f28","cd0c707b2d104522a520b468c2919b80","913354c9a2a448bbb35fb2b67fd83333","52b59bfaae3c40c4ab482f59d6f50b9b","5df33c175a524394945e27b2dd34bc0b","45858540eacb4b9387cdb8f3d909d145","a8c9d4a2b477437a84e569a5f975e0da","cc917d4a46314836968fd7b41592d687","05602469818a48f9b7d82c030e120616","279faff913bf4ca0a60b966b20c84a76","51926840031f462ab0ab00f42170f273","372aa83c47f14452abf7c2e728c05846","4177d4993bc1421896415410618880e4","cd1abc692f544b24aaeec730b8bafa88","5c7ca731443e4fbeb5876ad358d607be","428b1e02f95a4e2f8fb9da46bd51a9d1","7e0a7291b7af4bd2ba4ee11de9aecbf5","2c38636204f549cdb762c29e1edc7c61","55eca381724f4f889386d36808a6fabc","da46dbad2a2b489291dde263f0a6f668","77cd9868dfb241b5a04db19e23e209bd","086cd60b245f4d7384f2754065d7c2f4","7907c5f344444da991c63ef240e8bbdc","454347e4a06c4509bc6af16b07112382","a47488b61ced448a8193c364a6b04301","c192d818d63649029fca9930e7c50d5c","f5a5053e79fe45da9e4daf396befc008","e13b5f6bd5ea42eaa068b1f75f57b40f","782da535b87e414b87793291b0c90271","5eb326a10bca4845b6169f57b877b566","417472771eee4a11a49e49bb3134a471","fef0d1fbe36341408e42e69dec22ae3c","f1084400303c4cb6bef72212fd35f932","f2cc732dee504b1aa1f732fbb81c6a0c","dcebfbaad2eb4fefb52853eb45b673f4","831285184e654340a4dd448c81647226","e77b0226aaca4b68b312925ddcd681c8","2589fc8bec5f43b1a5819d14662bdb7f","b63ead767bc344228e944d7aa0df7225","0efa4d2ae44d49faa290366b45630ba1","dcf800940844409ea9745e74fb372579","37672a9ea79e4a14831fd6e13db982cc","b54ff49ca9ed45bca928f8f91e2149aa","61dd5541e1934515bb9a161809235af7","05072ace9ee84f159c6a893f3e964f0e","dc84ed6d05924554a50350f6d4c6efd8","f176bc0f590a440598fdfce4ee5eff9f","22ab0f1b028c49c6a02e4af825e4ded0","7cbf82c6952546189e610dcc7022cf46","220e379ca94a48aca84d80fc843acac1","351f2a1807644d90a90b76e5d5e1ae56","cec18f7fec5a40938b842b7b1dc48d7a","88d8f2f0ba6b4b0893f6e9ff910362d5","00c450d29f62440fbdae585d055b6c2e","7cec35df22fb4930b608094fcdfe8c51","fed9fd9a93a44fdf9d6c30b708ad9583","f7ad08b08d1e4fd0be191a1253a633bf","f28cfe2351874608bfc33c70594d976e","509fcdaa88f34b118d7f8fd5932f9291","8ce1c5f03db5424f822d3223fb90e108","46fae2d20a964de996578b0731df9190","664b94854a1a43dab4d22a911834cb02","5d8e46c165484e3bb4d5c3cc852c3fe1","fe86ed335b1246c68764aafc24713b12","0874ebd65b1d4b7981b8886f78e8736c","8f5240ceefe54900b59e528373980da3","06709514f88b4098a26d24f07785af73","b107a3ac819a47449f22154fe96a6e30","c1a4dcf9fa53444cbe514fe269f6ddbd","d4b615c8f43443b6a48ae83c13d4e6df","b51731bad2554fd8ae550159b5d33e2e","0286a8808403454eb19ac27cf6c3067d","ec4799021f07469cb5597caa7949273f","2aa3cd123b2d4bff8b25fa13ea95cc7f","05a6dd119e8c4b0a9acdc36ca0febf4f","3ab3fdf747bb4619bb3c4e3e5079f85d","8b139445455845418bedf6efbfbbe410","8ead2fa16fcc41e09b169fc811beea6d","cc2ecd3e31f748cfa79a24bfb1932df1","3d749c4f08a742bf81401654063db753","5edec56fa44a49ee906d28120c58810c","9be9db3243dc4667bff3301ab94b563b","9d53cee22c144be6933f71b2068d7e73","519ae04d56b94e0eb43264ec485fc323","89b3fccb00fa496e902aa79293555b90","6e64673ac71d4327972e7f48e6499944","73e4437565874eb7a6b672ce29ec1521","2b38695ab21f48758c96b25d4c16d9a6","8d4055acf89c417193416def119292a5","c3dbc37312174c769cdd45b77de16872","b72a48793a054d54b9d0309ef2717eea","eb41ddb46a7b45ceaceb3c065c44df62","d5504f5e493449238f014d09f328e33e","3264102a44004d369ec1072aba166d87","1ed3ca3970074569b5b5d0e1ba0b9cc4","41b04e3520e24405a6ad8e7592e93993","7ad758983a65403480d70e047d12c080","e6a0a6e87e2a477596aa6f4e563c4b65","fe3fc3df5f354d539070fe5c07f3cdfd","4e41be26952c46c7bffba1be11d768c0","2b83dfb2f3ea401296e82d25c758d8ae","19f1cc99c5544bf88722375494ee110d","ff19d241745148f5ac63f9bd0048af99","2422cb0f9eac4eefa915c6f1e8402362","e22f8892682f4eafae4d9e0ba3bb1485","dfb2f21376034491a7acbe25546fb908","d5bcdc4c956f4d2dbac3967178d15b7e","8b858f52d3344cf9bc8de58a2db5f796","d05fbfd0594449d19c8114a36d3b6b16","7aac5d08b0ae42aaaf9b8614a115ad6d","691f8c4a64ad46d58175ccff2e539c91","a05974d35feb420c91b758465e750b05","62559d53bb794d2098021bd36bf3a408","f8cf5d33f0fd431b847ec0d08c9ae980","181bdce08be64922be0642552b8597ee","52fb6b4ab392410b99cd4468daaa577c","a5fb524e452a4a63acd1facdb1f250eb","a414c2a9c34c4436ab5ccf4495365925","9ef7c38ccadc43618487b75d48067ad9","d8be13f045314bf798884e2c980252d2","8b45f5f86f75406a88cdd5f440b732c8","0bcaea5f186e4a24af3cb55625305d5c","af517be1028541089e8f278eea1e74e2","7f0a72b261c047c39b517c0fc7f5425b","cdf42d4164f44e058b5ea255e207f2c8","c3be8f8b76864e48905c8e83e711e877","4deed0ffd31e4620832667b3f5c8ed65","30c0743afaac43eeb02e617230e5774b","3dc44cb60ffd4799a5f2913e15cf889a","8bc91e62c18e4965895a4bb7777a609b","0a46373777c04bd5b4d8eb7f6cbab7d2","dcf790cb3e964978bf6fc3432560e725","d799fd37e34342e5820b5339534cf190","d3d67ca442d643f185c27b4eb5feb51b","866d4d757213404e9b9f1444d347a3f2","fed6b658edf44661a07142d1e5ac2700","f5f4bc60d0554941ae80fb67b7bc7350","b2317589df474040a3ba22bae8574f4e","688a964cbc1c4434a2ea2d0e86172bfa","b4dc08525fb744bbbdce84a25dedaa28","5544b79af0a84b08b8862107fd5f9f73","34b01e0b755347e89bf4f33074f07665","392b26993a254873b7c1146eca83e309","95a994cf0cd44f53886cb05da89474b9","7accce9a66ee49e9aee332d03fafada4","7b630e65b310436f9db41f61096fceb2","9fc3e9c7f4a445a6bec1be714e0911ef","c80a035114c44afcb47b2dcda3f8fd4c","7212976c9a4b419c8aaebc43159ef1f3","d19dd983066243c9aa8148a668149f4b","ad05108ab5b742c6acb2d7f620de4587","0298d1208e754130bc55c8954372fd4f","70db4c7b8b4c44bc85a909113ac9aa4e","e66b19c3659743afa8935f287d234890","f686a83f7a064437ba1fa4e1a9454bce","6af5f4bb38ab48e6ab0517101640b6d3","fd88ffae1c954ae5a6c1ff61765f11a2","d741131139054d61b8c495fa74681939","f4eb88196da5404cbc878f5caa926f53","ab66350a679147c1ab3ece2a51e8bdc1","2278a2abf404469394de00e2e17096c4","1b0dad56e28f49748ddfcd17718d75a4","b9d45c1ecbe8487fa34a07f453e2ece9","f7b1f559073243508064bc98a1d52bbb","3bdda2bb36cd4710ab0babdcabd8445a","72656f7aa5984cc7bd38701a9297e0f3","5d1c4db3024043cfbbcccfb8375e20bb","007853501520483db1f4c072c9e855dc","d0a0580f860a40288cb1f417bafb49a9","d55cbe27cb174a59a964a6f65ec1a0d0","613c73c1676d466eaa8c31f38b263c7d","628d0507486b45a89a7580f4abd22f62","195c2e4b8fbe46658773c40bd479adee","08261880205f44b583f649058a7fea41","b4d1946ae127422b892f5c28f2b5972b","8de61d44faeb4343991bc1ace060e684","6c89b0d7e2204363bffba39704add95c","34aad46fc6b942bca97ca85da26a01b6","09762ebc614a48398db0c2e3cb13482c","e461630f990a4ca5a0a0561a1cca4b02","86dce6f4ca284038920a1eed1169c519","39d5670c5b00455a90a9aad3408ec8a0","b981b92fb9f3498cabdee4b0c6a07082","f0afa7aee3734ad1810a929a12bc0f67","8de54c6653d643889055fa61939bcc95","63e7c339a8bb49fc802ba3cda54300ed","105f8485cd244fec84fe2c520eef3823","13fa62ba5d4840d7b3ff4530f76cae95","af22850b11554eac8403f0386650f937","cae857b0436646fcb802dcd7d2fb5c55","5309d9401c3442e39273979ec5e409e4","b38e58c3d1e54e62a98cce123c3ea602","c06512721a83430ca158aec924114fb8","b7cb239de990430da8d28d9e7a1cfe09","d478117c24e441348abb2669b53af76c","b55e8409eb5c4338999648d48608c80b","3f9f7134bfae43618443896743f2cd74","a56436e9a09b4a8ead2a695064705606","e7c183c30a3b425490d8cdccb91074ab","48582a7d3e964aadbd2a96b15ece029f","d472f8da7c5e42d99be254f55af68188","b3f6e0df98734065bb4bfcd7e434570c","a1f54d8ded614ab8923336498c371d27","1d0952dad51e42d380706680df4c0ee4","cedca5f18b5548fabd518c97540f3aa8","a4061e68f6124af5b57008f6b0f4b5c5","50f6c05ebc8a4339a6f26e8b98e41680","d665aed98dc34f38bcd467c559c4c158","aef42e02d4d5456683b505ba76d3d0a7","5286c2e220314a5aa23bb5a3e06d8fe9","7a55bc5f4d5a4106a16e306ccfd984a0","4f28e0e60a274e76b249ae30a7e3e9a0","42560a9a5f9f4f848c8d86a3e4149296","2639f1ade043464d80c1d89e27016876","afe262e0274448c9b85040dffbfb4fc5","49846d2f494c4bdbaed7c56a254b2aa2","e47742e0084b453cb65d2eacb8a8e2c5","ef31595aa97f4584b4a963025e2ca09d","44075983cefb42a0b5ddd544baff843f","acc9de36a89c44ca93a543509baae51c","9801db919eb44710bab8d83d752f3883","4c7ea160266d4bd2a4442053afce7659","5d2b84c1bcb34190bcb1d70d600cdadf","de2ba9afb41949249a5ccbb156bc9e8a","d1a797ad8a7f449685610c7a83bc0705","b412e8cf68f843f98897e82d1fc3a34a","9beb3e9ed72c4208a476f71c7ff1b6b9","23efed4adbb84495b1e162c9fdd8f31c","e774569f31f8459ab507e9857ff3d75a","34d58bc1ee014bd885b9b4904e2b0b45","ab0811b129ee41448449b03cee67fe8e","bdd611af929e40b58c2286e1bf062c68","54bc4363cf184d939c5804a1025af266","92b8529320184cb4acd7652baa0c1b59","79e5cbac6d774676b0d77b9304c8d271","a11d48f121ba49c2a6cb3d2db98d03cf","d9e45a14133b40038c82a43e733d6e94","aa04e05574c04822a9a58c3b91d65bec","1aaee8ed34364f66bbaf03267083db8f","ffbcd1e814c7485589e79cf65ef78fa0","6700e739824a43c2b277a31ea274b607","40d7f895e7e6406aae6dba6d1e5ab592","78e9519f252448d89aea3c89025b2690","c07675503855439d8bd512a59ecf82f6","a2326445877746968f995d9bf6b5edb8","b5b5d268d47743709a5e377ffbec48a3","9aea88ae0ff74c0799aaa4b55867e65e","b91d03f266ed4c39a83aa2e0b3612aa3","9307116cfde54a3eb1facb0a87663fe6","b3e7d489638d403ca6d2914df4151dd9","277bbefc1ce34ec3bffbd0cdf1d4582c","dbe52da55e694badae1a4e3cdf432d15","bfe8b79a2a57434b88281adf79132ba8","20d7be7c030f452b9be49194c45aed83","916715a5d07541559c27e211b136b13e","3f08739cebeb44b893cca9a305f0ee3b","d9083b02a4b84d918fe473aaf8bc3fde","7a78ba49de3f49de82b096ab122d05d5","8ed4255a9dba4025bd5a0462eb5171df","56b54412f2e644c38bc69c71227a9283","bf16a6ffb0d444de90a6964d291b5138","bb85512809a549fcb22cee76eb431b61","c7dd1ad1bed44293af4a43a9c86d5c5e","6e6f5c06ddb0433ab02be26efa2d7678","2c3256c9620c40e9be95bd7c3f795ae8","db1bf03797914919ab8741d7a7816850","3149afb1b64a4e2a8d02638dfe8adb86","1f287b1c1ff14a11bac5e4f9b5935b89","ed9f148ff1934cbc81a91783b717162c","93247a68a2574e26803b0b57df5e97c1","f15af4933bb049d3bb0269d48d3c70cf","0124d6845844434aa6ae5ee21191a0cb","c3505a4e9a2849c3a8adbf00ad4456cc"]},"executionInfo":{"status":"ok","timestamp":1712752342902,"user_tz":-480,"elapsed":7633763,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"5a073f2d-fd1f-4f2b-d6c8-44269bb0161e","id":"W9vwVZWUhFcz"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0.0001 weight_decay:\n"]},{"output_type":"display_data","data":{"text/plain":["model.safetensors:   0%|          | 0.00/268M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"1dcd1362eefc4c49b3291f89095f4292"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of DistilBertForSequenceClassification were not initialized from the model checkpoint at distilbert/distilbert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight', 'pre_classifier.bias', 'pre_classifier.weight']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"279faff913bf4ca0a60b966b20c84a76"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"77cd9868dfb241b5a04db19e23e209bd"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fef0d1fbe36341408e42e69dec22ae3c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b54ff49ca9ed45bca928f8f91e2149aa"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:30, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.728600</td>\n","      <td>2.467774</td>\n","      <td>0.285408</td>\n","      <td>0.204695</td>\n","      <td>0.195403</td>\n","      <td>0.285408</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.058500</td>\n","      <td>2.259593</td>\n","      <td>0.332618</td>\n","      <td>0.278175</td>\n","      <td>0.269939</td>\n","      <td>0.332618</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.497100</td>\n","      <td>2.156307</td>\n","      <td>0.375536</td>\n","      <td>0.325423</td>\n","      <td>0.356665</td>\n","      <td>0.375536</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.009600</td>\n","      <td>2.054406</td>\n","      <td>0.416309</td>\n","      <td>0.399385</td>\n","      <td>0.420342</td>\n","      <td>0.416309</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.723000</td>\n","      <td>2.059977</td>\n","      <td>0.448498</td>\n","      <td>0.428499</td>\n","      <td>0.431690</td>\n","      <td>0.448498</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1865 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"00c450d29f62440fbdae585d055b6c2e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/467 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0874ebd65b1d4b7981b8886f78e8736c"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1865 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3ab3fdf747bb4619bb3c4e3e5079f85d"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/467 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"73e4437565874eb7a6b672ce29ec1521"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:24, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.800000</td>\n","      <td>2.544566</td>\n","      <td>0.269807</td>\n","      <td>0.185755</td>\n","      <td>0.149910</td>\n","      <td>0.269807</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.089200</td>\n","      <td>2.182348</td>\n","      <td>0.364026</td>\n","      <td>0.299368</td>\n","      <td>0.281618</td>\n","      <td>0.364026</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.573800</td>\n","      <td>2.132477</td>\n","      <td>0.374732</td>\n","      <td>0.330678</td>\n","      <td>0.312857</td>\n","      <td>0.374732</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.118200</td>\n","      <td>2.187538</td>\n","      <td>0.346895</td>\n","      <td>0.316520</td>\n","      <td>0.351432</td>\n","      <td>0.346895</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.837400</td>\n","      <td>2.149251</td>\n","      <td>0.368308</td>\n","      <td>0.349461</td>\n","      <td>0.417482</td>\n","      <td>0.368308</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"e6a0a6e87e2a477596aa6f4e563c4b65"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d05fbfd0594449d19c8114a36d3b6b16"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d8be13f045314bf798884e2c980252d2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0a46373777c04bd5b4d8eb7f6cbab7d2"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:26, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.823000</td>\n","      <td>2.410682</td>\n","      <td>0.339056</td>\n","      <td>0.256992</td>\n","      <td>0.240909</td>\n","      <td>0.339056</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.120400</td>\n","      <td>2.222083</td>\n","      <td>0.379828</td>\n","      <td>0.297892</td>\n","      <td>0.272707</td>\n","      <td>0.379828</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.583100</td>\n","      <td>2.133009</td>\n","      <td>0.390558</td>\n","      <td>0.345756</td>\n","      <td>0.372770</td>\n","      <td>0.390558</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.105800</td>\n","      <td>2.109247</td>\n","      <td>0.412017</td>\n","      <td>0.394361</td>\n","      <td>0.406147</td>\n","      <td>0.412017</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.816600</td>\n","      <td>2.109277</td>\n","      <td>0.396996</td>\n","      <td>0.370441</td>\n","      <td>0.387451</td>\n","      <td>0.396996</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1865 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"34b01e0b755347e89bf4f33074f07665"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/467 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"70db4c7b8b4c44bc85a909113ac9aa4e"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1865 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f7b1f559073243508064bc98a1d52bbb"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/467 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b4d1946ae127422b892f5c28f2b5972b"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:20, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.818400</td>\n","      <td>2.262443</td>\n","      <td>0.368308</td>\n","      <td>0.285307</td>\n","      <td>0.282955</td>\n","      <td>0.368308</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.128300</td>\n","      <td>1.917058</td>\n","      <td>0.428266</td>\n","      <td>0.366667</td>\n","      <td>0.352767</td>\n","      <td>0.428266</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.542600</td>\n","      <td>1.781771</td>\n","      <td>0.451820</td>\n","      <td>0.413677</td>\n","      <td>0.407299</td>\n","      <td>0.451820</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.048600</td>\n","      <td>1.807102</td>\n","      <td>0.456103</td>\n","      <td>0.439794</td>\n","      <td>0.453028</td>\n","      <td>0.456103</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.740900</td>\n","      <td>1.768921</td>\n","      <td>0.458244</td>\n","      <td>0.448598</td>\n","      <td>0.467864</td>\n","      <td>0.458244</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"63e7c339a8bb49fc802ba3cda54300ed"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3f9f7134bfae43618443896743f2cd74"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d665aed98dc34f38bcd467c559c4c158"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"44075983cefb42a0b5ddd544baff843f"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:27, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.726500</td>\n","      <td>2.716379</td>\n","      <td>0.231760</td>\n","      <td>0.147975</td>\n","      <td>0.128809</td>\n","      <td>0.231760</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.158300</td>\n","      <td>2.524278</td>\n","      <td>0.298283</td>\n","      <td>0.207674</td>\n","      <td>0.184059</td>\n","      <td>0.298283</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.646000</td>\n","      <td>2.287951</td>\n","      <td>0.347639</td>\n","      <td>0.285070</td>\n","      <td>0.267694</td>\n","      <td>0.347639</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.172500</td>\n","      <td>2.395111</td>\n","      <td>0.345494</td>\n","      <td>0.332545</td>\n","      <td>0.361726</td>\n","      <td>0.345494</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.845700</td>\n","      <td>2.328772</td>\n","      <td>0.373391</td>\n","      <td>0.345785</td>\n","      <td>0.342046</td>\n","      <td>0.373391</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"stream","name":"stdout","text":["0.001 weight_decay:\n"]},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"34d58bc1ee014bd885b9b4904e2b0b45"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"6700e739824a43c2b277a31ea274b607"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/1866 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"dbe52da55e694badae1a4e3cdf432d15"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/466 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c7dd1ad1bed44293af4a43a9c86d5c5e"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:24, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.838800</td>\n","      <td>2.608943</td>\n","      <td>0.238197</td>\n","      <td>0.156288</td>\n","      <td>0.145552</td>\n","      <td>0.238197</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.246700</td>\n","      <td>2.410116</td>\n","      <td>0.285408</td>\n","      <td>0.226995</td>\n","      <td>0.212217</td>\n","      <td>0.285408</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.715500</td>\n","      <td>2.347194</td>\n","      <td>0.317597</td>\n","      <td>0.293390</td>\n","      <td>0.308442</td>\n","      <td>0.317597</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.222400</td>\n","      <td>2.154492</td>\n","      <td>0.388412</td>\n","      <td>0.360921</td>\n","      <td>0.365007</td>\n","      <td>0.388412</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.945800</td>\n","      <td>2.177375</td>\n","      <td>0.364807</td>\n","      <td>0.339774</td>\n","      <td>0.335984</td>\n","      <td>0.364807</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:24, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.799800</td>\n","      <td>2.545408</td>\n","      <td>0.269807</td>\n","      <td>0.185585</td>\n","      <td>0.151022</td>\n","      <td>0.269807</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.087100</td>\n","      <td>2.185135</td>\n","      <td>0.364026</td>\n","      <td>0.297891</td>\n","      <td>0.285495</td>\n","      <td>0.364026</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.572500</td>\n","      <td>2.126858</td>\n","      <td>0.376874</td>\n","      <td>0.333513</td>\n","      <td>0.321529</td>\n","      <td>0.376874</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.121600</td>\n","      <td>2.189954</td>\n","      <td>0.342612</td>\n","      <td>0.312415</td>\n","      <td>0.349230</td>\n","      <td>0.342612</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.837700</td>\n","      <td>2.146418</td>\n","      <td>0.372591</td>\n","      <td>0.349114</td>\n","      <td>0.405584</td>\n","      <td>0.372591</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:20, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.825000</td>\n","      <td>2.403016</td>\n","      <td>0.324034</td>\n","      <td>0.237398</td>\n","      <td>0.199444</td>\n","      <td>0.324034</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.130900</td>\n","      <td>2.280778</td>\n","      <td>0.351931</td>\n","      <td>0.268909</td>\n","      <td>0.245731</td>\n","      <td>0.351931</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.615600</td>\n","      <td>2.096452</td>\n","      <td>0.396996</td>\n","      <td>0.351381</td>\n","      <td>0.405621</td>\n","      <td>0.396996</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.139300</td>\n","      <td>2.103783</td>\n","      <td>0.403433</td>\n","      <td>0.380054</td>\n","      <td>0.391030</td>\n","      <td>0.403433</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.842000</td>\n","      <td>2.098742</td>\n","      <td>0.414163</td>\n","      <td>0.382711</td>\n","      <td>0.411892</td>\n","      <td>0.414163</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:26, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.818100</td>\n","      <td>2.261887</td>\n","      <td>0.368308</td>\n","      <td>0.280408</td>\n","      <td>0.274569</td>\n","      <td>0.368308</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.128200</td>\n","      <td>1.918528</td>\n","      <td>0.438972</td>\n","      <td>0.377376</td>\n","      <td>0.357687</td>\n","      <td>0.438972</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.543200</td>\n","      <td>1.795414</td>\n","      <td>0.447537</td>\n","      <td>0.406964</td>\n","      <td>0.404951</td>\n","      <td>0.447537</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.055700</td>\n","      <td>1.819659</td>\n","      <td>0.453961</td>\n","      <td>0.440843</td>\n","      <td>0.464753</td>\n","      <td>0.453961</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.748800</td>\n","      <td>1.773859</td>\n","      <td>0.460385</td>\n","      <td>0.451674</td>\n","      <td>0.470178</td>\n","      <td>0.460385</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:21, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.717900</td>\n","      <td>2.698646</td>\n","      <td>0.225322</td>\n","      <td>0.144269</td>\n","      <td>0.125779</td>\n","      <td>0.225322</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.120900</td>\n","      <td>2.504297</td>\n","      <td>0.298283</td>\n","      <td>0.214971</td>\n","      <td>0.197689</td>\n","      <td>0.298283</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.628300</td>\n","      <td>2.345123</td>\n","      <td>0.319742</td>\n","      <td>0.264222</td>\n","      <td>0.279617</td>\n","      <td>0.319742</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.153900</td>\n","      <td>2.390901</td>\n","      <td>0.319742</td>\n","      <td>0.308510</td>\n","      <td>0.338128</td>\n","      <td>0.319742</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.832700</td>\n","      <td>2.310281</td>\n","      <td>0.386266</td>\n","      <td>0.353127</td>\n","      <td>0.342660</td>\n","      <td>0.386266</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"stream","name":"stdout","text":["0.01 weight_decay:\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:31, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.842300</td>\n","      <td>2.587761</td>\n","      <td>0.246781</td>\n","      <td>0.166727</td>\n","      <td>0.141343</td>\n","      <td>0.246781</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.258500</td>\n","      <td>2.496962</td>\n","      <td>0.270386</td>\n","      <td>0.224544</td>\n","      <td>0.218475</td>\n","      <td>0.270386</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.752200</td>\n","      <td>2.344963</td>\n","      <td>0.343348</td>\n","      <td>0.313894</td>\n","      <td>0.353054</td>\n","      <td>0.343348</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.250700</td>\n","      <td>2.168535</td>\n","      <td>0.379828</td>\n","      <td>0.354092</td>\n","      <td>0.352003</td>\n","      <td>0.379828</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.966200</td>\n","      <td>2.163390</td>\n","      <td>0.369099</td>\n","      <td>0.339658</td>\n","      <td>0.333626</td>\n","      <td>0.369099</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:29, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.801600</td>\n","      <td>2.542131</td>\n","      <td>0.256959</td>\n","      <td>0.174413</td>\n","      <td>0.139138</td>\n","      <td>0.256959</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.088500</td>\n","      <td>2.188288</td>\n","      <td>0.366167</td>\n","      <td>0.298510</td>\n","      <td>0.278408</td>\n","      <td>0.366167</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.572900</td>\n","      <td>2.146674</td>\n","      <td>0.374732</td>\n","      <td>0.330587</td>\n","      <td>0.308566</td>\n","      <td>0.374732</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.120700</td>\n","      <td>2.198709</td>\n","      <td>0.334047</td>\n","      <td>0.306422</td>\n","      <td>0.383019</td>\n","      <td>0.334047</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.838100</td>\n","      <td>2.155706</td>\n","      <td>0.376874</td>\n","      <td>0.360941</td>\n","      <td>0.417489</td>\n","      <td>0.376874</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:21, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.822500</td>\n","      <td>2.442780</td>\n","      <td>0.336910</td>\n","      <td>0.253834</td>\n","      <td>0.247026</td>\n","      <td>0.336910</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.135500</td>\n","      <td>2.248970</td>\n","      <td>0.369099</td>\n","      <td>0.287956</td>\n","      <td>0.289456</td>\n","      <td>0.369099</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.616700</td>\n","      <td>2.136099</td>\n","      <td>0.390558</td>\n","      <td>0.349882</td>\n","      <td>0.390860</td>\n","      <td>0.390558</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.130300</td>\n","      <td>2.140706</td>\n","      <td>0.405579</td>\n","      <td>0.388000</td>\n","      <td>0.411302</td>\n","      <td>0.405579</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.832100</td>\n","      <td>2.112775</td>\n","      <td>0.407725</td>\n","      <td>0.382818</td>\n","      <td>0.407172</td>\n","      <td>0.407725</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:24, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.822500</td>\n","      <td>2.220565</td>\n","      <td>0.376874</td>\n","      <td>0.286101</td>\n","      <td>0.263501</td>\n","      <td>0.376874</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.139100</td>\n","      <td>1.970206</td>\n","      <td>0.413276</td>\n","      <td>0.356969</td>\n","      <td>0.357654</td>\n","      <td>0.413276</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.559100</td>\n","      <td>1.802228</td>\n","      <td>0.453961</td>\n","      <td>0.413432</td>\n","      <td>0.411619</td>\n","      <td>0.453961</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.080500</td>\n","      <td>1.807868</td>\n","      <td>0.432548</td>\n","      <td>0.420670</td>\n","      <td>0.436931</td>\n","      <td>0.432548</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.764500</td>\n","      <td>1.789628</td>\n","      <td>0.449679</td>\n","      <td>0.440564</td>\n","      <td>0.448670</td>\n","      <td>0.449679</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/accelerate/accelerator.py:436: FutureWarning: Passing the following arguments to `Accelerator` is deprecated and will be removed in version 1.0 of Accelerate: dict_keys(['dispatch_batches', 'split_batches', 'even_batches', 'use_seedable_sampler']). Please pass an `accelerate.DataLoaderConfiguration` instead: \n","dataloader_config = DataLoaderConfiguration(dispatch_batches=None, split_batches=False, even_batches=True, use_seedable_sampler=True)\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","    <div>\n","      \n","      <progress value='585' max='585' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [585/585 08:21, Epoch 5/5]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n"," <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Accuracy</th>\n","      <th>F1</th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>1</td>\n","      <td>2.720900</td>\n","      <td>2.693542</td>\n","      <td>0.231760</td>\n","      <td>0.152452</td>\n","      <td>0.119154</td>\n","      <td>0.231760</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>2.129400</td>\n","      <td>2.525388</td>\n","      <td>0.296137</td>\n","      <td>0.207182</td>\n","      <td>0.211097</td>\n","      <td>0.296137</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>1.650900</td>\n","      <td>2.294386</td>\n","      <td>0.347639</td>\n","      <td>0.274589</td>\n","      <td>0.278408</td>\n","      <td>0.347639</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>1.170400</td>\n","      <td>2.348988</td>\n","      <td>0.354077</td>\n","      <td>0.332697</td>\n","      <td>0.331614</td>\n","      <td>0.354077</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.842600</td>\n","      <td>2.321598</td>\n","      <td>0.371245</td>\n","      <td>0.339579</td>\n","      <td>0.331982</td>\n","      <td>0.371245</td>\n","    </tr>\n","  </tbody>\n","</table><p>"]},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(weight_decays):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['train_loss'], color=c[idx], label=f'{p} {mode}')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('train_loss')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712752344299,"user_tz":-480,"elapsed":1406,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"a71d66b9-c8bc-4eb1-817f-1739393f9fa4","id":"59FjL0E_hFcz"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(weight_decays):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_f1'], color=c[idx], label=f'{p} {mode}')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_f1')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712752344299,"user_tz":-480,"elapsed":9,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"285170fa-c795-42da-dc5f-37b12e155fd0","id":"oBfg2yFLhFcz"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(weight_decays):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_acc'], color=c[idx], label=f'{p} {mode}')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_acc')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712752345864,"user_tz":-480,"elapsed":1573,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"422cdc93-f504-47e7-c3f7-e886c5b090a5","id":"KqqIhLMNhFcz"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(weight_decays):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_precision'], color=c[idx], label=f'{p} {mode}')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_precision')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712752345864,"user_tz":-480,"elapsed":18,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"e36ec854-4cb7-49fc-de0f-93bf81c2966a","id":"vnxRPtiXhFcz"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# YOUR CODE HERE\n","plt.figure(figsize=(8, 6))\n","c = ['red','green','blue','black','yellow']\n","for idx, p in enumerate(weight_decays):\n","    plt.plot(range(no_epochs), cross_validation_accuracies[p]['eval_recall'], color=c[idx], label=f'{p} {mode}')\n","plt.xlabel('no. of epochs')\n","plt.ylabel('eval_recall')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1712752345865,"user_tz":-480,"elapsed":18,"user":{"displayName":"Yeop Huen Yeo","userId":"03147453995867635598"}},"outputId":"720673bc-64af-4a01-ceb1-91dc4bb9d971","id":"7R8yWy1yhFc0"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}